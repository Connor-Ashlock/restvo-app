{"version":3,"sources":["./src/app/pages/manage/billing/billing.page.html","./src/app/pages/manage/billing/billing.module.ts","./src/app/pages/manage/billing/billing.page.scss","./src/app/pages/manage/billing/billing.page.ts"],"names":[],"mappings":"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","file":"default~billing-billing-module~manage-managecommunities-managecommunities-module.js","sourcesContent":["export default \"<ion-header *ngIf=\\\"modalPage\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"closeModal()\\\"><ion-icon name=\\\"chevron-back-outline\\\"></ion-icon></ion-button>\\n    </ion-buttons>\\n    <ion-title>{{userData.user.churches[userData.currentCommunityIndex].name}}: Billing</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid style=\\\"height: 100%\\\" *ngIf=\\\"ionSpinner\\\">\\n    <ion-row class=\\\"ion-justify-content-start ion-align-items-center\\\" style=\\\"height: 100%\\\">\\n      <ion-spinner name=\\\"dots\\\"></ion-spinner>\\n    </ion-row>\\n  </ion-grid>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>\\n        Estimated Monthly Total\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"resource\\\">\\n      <h2 class=\\\"ion-text-center\\\">{{churchService.numberOfActiveUsers}} active users x {{resource['en-US'].matrix_string[1][1]}} (per user, per month) = ${{(churchService.numberOfActiveUsers*resource.matrix_number[1][0]).toFixed(2)}}</h2>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Payment Information</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <div *ngFor=\\\"let source of sources\\\">\\n        <ion-item>\\n          <ion-label slot=\\\"start\\\">Card Type</ion-label>\\n          <p slot=\\\"end\\\">{{source.brand}}</p>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label slot=\\\"start\\\">Last 4 Digits</ion-label>\\n          <p slot=\\\"end\\\">{{source.last4}}</p>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label slot=\\\"start\\\">Expiration Date</ion-label>\\n          <p slot=\\\"end\\\">{{source.exp_month}}/{{source.exp_year}}</p>\\n        </ion-item>\\n      </div>\\n    </ion-card-content>\\n    <ion-row *ngIf=\\\"!updatePayment\\\">\\n      <ion-col>\\n        <ion-button color=\\\"primary\\\" shape=\\\"round\\\" fill=\\\"solid\\\" expand=\\\"block\\\" (click)=\\\"updatePaymentMethod()\\\">Change Payment Information</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-card>\\n  <ion-card [hidden]=\\\"!updatePayment\\\">\\n    <form [formGroup]=\\\"billingForm\\\">\\n      <ion-card-header>\\n        <ion-card-title>Update Payment Information</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <div [id]=stripeElementName class=\\\"field\\\"></div>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Name</ion-label>\\n          <ion-input autocomplete=\\\"on\\\" type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Jane Doe\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Email Address</ion-label>\\n          <ion-input autocomplete=\\\"on\\\" type=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"jane@restvo.com\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Street</ion-label>\\n          <ion-input autocomplete=\\\"on\\\" type=\\\"text\\\" formControlName=\\\"line1\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">City</ion-label>\\n          <ion-input autocomplete=\\\"on\\\" type=\\\"text\\\" formControlName=\\\"city\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">State</ion-label>\\n          <ion-input autocomplete=\\\"on\\\" type=\\\"text\\\" formControlName=\\\"state\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Zip/Postal Code</ion-label>\\n          <ion-input autocomplete=\\\"on\\\" type=\\\"text\\\" formControlName=\\\"postal_code\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Country</ion-label>\\n          <ion-select [interfaceOptions]=\\\"{cssClass: 'level-15'}\\\" formControlName=\\\"country\\\">\\n            <ion-select-option value=\\\"US\\\" [class.selected]='true'>United States</ion-select-option>\\n            <ion-select-option value=\\\"AU\\\">Australia</ion-select-option>\\n            <ion-select-option value=\\\"AT\\\">Austria</ion-select-option>\\n            <ion-select-option value=\\\"BE\\\">Belgium</ion-select-option>\\n            <ion-select-option value=\\\"BR\\\">Brazil</ion-select-option>\\n            <ion-select-option value=\\\"CA\\\">Canada</ion-select-option>\\n            <ion-select-option value=\\\"CN\\\">China</ion-select-option>\\n            <ion-select-option value=\\\"DK\\\">Denmark</ion-select-option>\\n            <ion-select-option value=\\\"FI\\\">Finland</ion-select-option>\\n            <ion-select-option value=\\\"FR\\\">France</ion-select-option>\\n            <ion-select-option value=\\\"DE\\\">Germany</ion-select-option>\\n            <ion-select-option value=\\\"HK\\\">Hong Kong</ion-select-option>\\n            <ion-select-option value=\\\"IE\\\">Ireland</ion-select-option>\\n            <ion-select-option value=\\\"IT\\\">Italy</ion-select-option>\\n            <ion-select-option value=\\\"JP\\\">Japan</ion-select-option>\\n            <ion-select-option value=\\\"LU\\\">Luxembourg</ion-select-option>\\n            <ion-select-option value=\\\"MX\\\">Mexico</ion-select-option>\\n            <ion-select-option value=\\\"NL\\\">Netherlands</ion-select-option>\\n            <ion-select-option value=\\\"NZ\\\">New Zealand</ion-select-option>\\n            <ion-select-option value=\\\"NO\\\">Norway</ion-select-option>\\n            <ion-select-option value=\\\"PT\\\">Portugal</ion-select-option>\\n            <ion-select-option value=\\\"SG\\\">Singapore</ion-select-option>\\n            <ion-select-option value=\\\"ES\\\">Spain</ion-select-option>\\n            <ion-select-option value=\\\"SE\\\">Sweden</ion-select-option>\\n            <ion-select-option value=\\\"CH\\\">Switzerland</ion-select-option>\\n            <ion-select-option value=\\\"GB\\\">United Kingdom</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n      </ion-card-content>\\n    </form>\\n    <ion-row>\\n      <ion-col>\\n        <ion-button color=\\\"primary\\\" shape=\\\"round\\\" fill=\\\"solid\\\" expand=\\\"block\\\" (click)=\\\"submitBillingMethod()\\\" [disabled]=\\\"!billingForm.valid\\\">Update</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Billing History</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <table>\\n        <thead>\\n        <tr>\\n          <th>Invoice Number</th>\\n          <th>Plan</th>\\n          <th>Total &nbsp;</th>\\n          <th>Due &nbsp;</th>\\n          <th>Created</th>\\n        </tr>\\n        <tr>\\n          <td>&nbsp;</td>\\n        </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"invoices.length\\\">\\n        <tr *ngFor=\\\"let invoice of invoices\\\">\\n          <td>\\n            <p>{{invoice.number}} &nbsp;&nbsp;</p>\\n          </td>\\n          <td>\\n            <p>{{invoice.lines.data[0].description}} &nbsp;</p>\\n          </td>\\n          <td>\\n            <p>${{invoice.total/100}} {{invoice.currency.toUpperCase()}} &nbsp;</p>\\n          </td>\\n          <td>\\n            <p>${{invoice.amount_due/100}} {{invoice.currency.toUpperCase()}} &nbsp;</p>\\n          </td>\\n          <td>\\n            <p>{{invoice.created*1000 | datetime: 'm:l,d:n,y:n'}}</p>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </ion-card-content>\\n    <ion-row *ngIf=\\\"invoices.length\\\">\\n      <ion-col>\\n        <ion-button color=\\\"primary\\\" shape=\\\"round\\\" fill=\\\"solid\\\" expand=\\\"block\\\" (click)=\\\"listInvoices('next')\\\">Show More</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-card>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BillingPage } from './billing.page';\nimport {ApplicationPipesModule} from \"../../../pipes/application-pipes\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BillingPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ApplicationPipesModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BillingPage]\n})\nexport class BillingPageModule {}\n","export default \"app-billing ion-spinner {\\n  position: absolute;\\n  margin: 48%;\\n}\\napp-billing .field {\\n  flex: 1;\\n  padding: 5% 15px;\\n  background: transparent;\\n  font-weight: 400;\\n  color: #31325f;\\n  outline: none;\\n  cursor: text;\\n}\\napp-billing table {\\n  display: table;\\n  overflow-x: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jYWxpeGh1YW5nL1dlYl9EZXZlbG9wbWVudC9yZXN0dm8vcmVzdHZvLWFwcC9zcmMvYXBwL3BhZ2VzL21hbmFnZS9iaWxsaW5nL2JpbGxpbmcucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9tYW5hZ2UvYmlsbGluZy9iaWxsaW5nLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFRTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtBQ0RKO0FESUU7RUFDRSxPQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLGFBQUE7RUFDQSxZQUFBO0FDRko7QURLRTtFQUNFLGNBQUE7RUFDQSxrQkFBQTtBQ0hKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbWFuYWdlL2JpbGxpbmcvYmlsbGluZy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhcHAtYmlsbGluZyB7XG5cbiAgaW9uLXNwaW5uZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBtYXJnaW46IDQ4JTtcbiAgfVxuXG4gIC5maWVsZCB7XG4gICAgZmxleDogMTtcbiAgICBwYWRkaW5nOiA1JSAxNXB4O1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgY29sb3I6ICMzMTMyNWY7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBjdXJzb3I6IHRleHQ7XG4gIH1cblxuICB0YWJsZSB7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgb3ZlcmZsb3cteDogc2Nyb2xsO1xuICB9XG59IiwiYXBwLWJpbGxpbmcgaW9uLXNwaW5uZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG1hcmdpbjogNDglO1xufVxuYXBwLWJpbGxpbmcgLmZpZWxkIHtcbiAgZmxleDogMTtcbiAgcGFkZGluZzogNSUgMTVweDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGNvbG9yOiAjMzEzMjVmO1xuICBvdXRsaW5lOiBub25lO1xuICBjdXJzb3I6IHRleHQ7XG59XG5hcHAtYmlsbGluZyB0YWJsZSB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBvdmVyZmxvdy14OiBzY3JvbGw7XG59Il19 */\"","import {Component, Input, OnDestroy, OnInit, ViewEncapsulation} from '@angular/core';\nimport { StripeService, Elements, Element as StripeElement, ElementsOptions } from \"ngx-stripe\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport {AlertController, ModalController, Platform} from \"@ionic/angular\";\nimport {UserData} from \"../../../services/user.service\";\nimport {PaymentService} from \"../../../services/payment.service\";\nimport {Churches} from \"../../../services/church.service\";\nimport {Router} from \"@angular/router\";\nimport {Resource} from \"../../../services/resource.service\";\nimport {CacheService} from 'ionic-cache';\n\n@Component({\n  selector: 'app-billing',\n  templateUrl: './billing.page.html',\n  styleUrls: ['./billing.page.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BillingPage implements OnInit, OnDestroy {\n\n    @Input() modalPage: any;\n    elements: Elements;\n    card: StripeElement;\n    // optional parameters\n    elementsOptions: ElementsOptions = {\n        locale: 'en'\n    };\n    billingForm: FormGroup;\n    refreshNeeded = false;\n    numberOfActiveUsers: any;\n    sources: any;\n    invoices = [];\n    endOfInvoices = false;\n    stripeElementName = 'card-element-billing';\n    updatePayment = false;\n    ionSpinner = false;\n    stripeCustomer: any;\n    resource: any;\n    subscriptions: any = {};\n\n  constructor(\n      private cache: CacheService,\n      private router: Router,\n      public platform: Platform,\n      private stripeService: StripeService,\n      private formBuilder: FormBuilder,\n      public modalCtrl: ModalController,\n      private alertCtrl: AlertController,\n      public resourceService: Resource,\n      private paymentService: PaymentService,\n      public churchService: Churches,\n      public userData: UserData,\n  ) { }\n\n    ngOnInit() {\n        this.billingForm = this.formBuilder.group({\n            name: ['', [Validators.required]],\n            email: ['', [Validators.required]],\n            line1: ['', [Validators.required]],\n            line2: [''],\n            city: ['', [Validators.required]],\n            state: ['', [Validators.required]],\n            postal_code: ['', [Validators.required]],\n            country: ['', [Validators.required]],\n        });\n        let loadResource = this.resourceService.load('en-US', \"Restvo Plans\");\n        let resource = this.cache.loadFromDelayedObservable('loadResource: Restvo Plans', loadResource, 'resource', 3600, 'none');\n        resource.subscribe(result => {\n            this.resource = result[0];\n        }, async (err) => {\n            let networkAlert = await await this.alertCtrl.create({\n                header: 'No Internet Connection',\n                message: 'Please check your internet connection.',\n                buttons: ['Dismiss'],\n                cssClass: 'level-15'\n            });\n            await networkAlert.present();\n        });\n        this.invoices = [];\n        this.preparePage();\n        this.subscriptions['refreshUserStatus'] = this.userData.refreshUserStatus$.subscribe(this.refreshHandler);\n    }\n\n    ionViewDidEnter() {\n        this.stripeElementName = 'card-element-billing' + (this.modalPage ? '-modal' : '');\n    }\n\n    refreshHandler = async (data) => {\n        if (data && data.type === 'load community ready') {\n          this.updatePayment = false;\n          this.invoices = [];\n          this.preparePage();\n        }\n    };\n\n    async preparePage() {\n        if (this.churchService.currentManagedCommunity) {\n            this.stripeCustomer = await this.paymentService.loadCustomer(this.userData.user.churches[this.userData.currentCommunityIndex]._id);\n            this.churchService.numberOfActiveUsers = await this.churchService.getAppUserUsage(this.churchService.currentManagedCommunity._id);\n            if (this.stripeCustomer) {\n                this.loadBillingInfo();\n                this.listInvoices(null);\n            }\n        }\n    }\n\n    prepareBillingElement() {\n        this.stripeService.elements(this.elementsOptions)\n            .subscribe(elements => {\n                this.elements = elements;\n                // Only mount the element the first time\n                if (!this.card) {\n                    this.card = this.elements.create('card', {\n                        style: {\n                            base: {\n                                iconColor: '#666EE8',\n                                color: '#31325F',\n                                fontWeight: 300,\n                                fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n                                fontSize: '18px',\n                                '::placeholder': {\n                                    color: '#CFD7E0'\n                                }\n                            }\n                        }\n                    });\n                    this.card.mount('#' + this.stripeElementName);\n                } else {\n                    this.card.mount('#' + this.stripeElementName);\n                }\n            });\n    }\n\n  async loadBillingInfo() {\n      this.sources = await this.paymentService.loadBillingInfo(this.churchService.currentManagedCommunity._id);\n  }\n\n  async updatePaymentMethod() {\n        if (!this.platform.is('cordova')) {\n            this.updatePayment = true;\n            this.prepareBillingElement();\n        } else {\n            const alert = await this.alertCtrl.create({\n                header: 'Opening the In-App Browser',\n                subHeader: 'To update the billing information, you will be redirected to app.restvo.com.',\n                buttons: [{ text: 'Ok',\n                    handler: () => {\n                        const navTransition = alert.dismiss();\n                        navTransition.then(async () => {\n                            window.open('https://app.restvo.com/register', \"_blank\");\n                        });\n                    }},\n                    { text: 'Cancel' }],\n                cssClass: 'level-15'\n            });\n            await alert.present();\n        }\n  }\n\n  async submitBillingMethod() {\n        try {\n            this.ionSpinner = true;\n            const owner = this.billingForm.value;\n            owner.address = { line1: owner.line1, line2: owner.line2, city: owner.city, state: owner.state, postal_code: owner.postal_code, country: owner.country };\n            delete owner.line1;\n            delete owner.line2;\n            delete owner.city;\n            delete owner.state;\n            delete owner.postal_code;\n            delete owner.country;\n            this.stripeService.createSource(this.card, {\n                type: 'card',\n                currency: 'usd',\n                owner: owner,\n            }).subscribe(async (result) => {\n                if (result.source) {\n                    const updateResult = await this.paymentService.updateBillingMethod(this.churchService.currentManagedCommunity._id, result.source);\n                    this.ionSpinner = false;\n                    if (updateResult === 'success') {\n                        this.loadBillingInfo();\n                        this.card.clear();\n                        this.billingForm.reset();\n                        const alert = await this.alertCtrl.create({\n                            header: 'Success',\n                            subHeader: 'Your payment method is updated.',\n                            buttons: [{ text: 'Ok' }],\n                            cssClass: 'level-15'\n                        });\n                        await alert.present();\n                    } else {\n                        const alert = await this.alertCtrl.create({\n                            header: 'Something Went Wrong',\n                            subHeader: 'We cannot process your request at this time. Please try again later.',\n                            buttons: [{ text: 'Ok' }],\n                            cssClass: 'level-15'\n                        });\n                        await alert.present();\n                    }\n                } else if (result.error) {\n                    this.ionSpinner = false;\n                    // Error creating the source\n                    console.log(result.error.message);\n                    const alert = await this.alertCtrl.create({\n                        header: 'Something Went Wrong',\n                        subHeader: 'We cannot process your request at this time.',\n                        message: result.error.message,\n                        buttons: [{ text: 'Ok' }],\n                        cssClass: 'level-15'\n                    });\n                    await alert.present();\n                }\n            });\n        } catch (err) {\n            this.ionSpinner = false;\n            const alert = await this.alertCtrl.create({\n                header: 'Something Went Wrong',\n                subHeader: 'We cannot process your request at this time. Please try again later.',\n                buttons: [{ text: 'Ok' }],\n                cssClass: 'level-15'\n            });\n            await alert.present();\n        }\n  }\n\n    async listInvoices(direction) {\n        let query = '';\n        if (direction === 'previous'){\n            query += \"?ending_before=\" + this.invoices[0].id;\n        }\n        if (direction === 'next'){\n            query += \"?starting_after=\" + this.invoices[this.invoices.length-1].id;\n        }\n        const invoices: any = await this.paymentService.listInvoices(this.churchService.currentManagedCommunity._id, query);\n        invoices.forEach((invoice)=>{\n            this.invoices.push(invoice);\n        });\n    }\n\n    closeModal() {\n        this.modalCtrl.dismiss(this.refreshNeeded);\n    }\n\n    ngOnDestroy() {\n        /*if (this.card) {\n            this.card.unmount();\n        }*/\n        this.subscriptions['refreshUserStatus'].unsubscribe(this.refreshHandler);\n    }\n}\n"],"sourceRoot":"webpack:///"}