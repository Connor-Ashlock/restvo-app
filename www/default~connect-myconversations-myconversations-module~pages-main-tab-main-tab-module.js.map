{"version":3,"sources":["./src/app/pages/connect/createchat/createchat.page.html","./src/app/pages/connect/createchat/createchat.page.scss","./src/app/pages/connect/createchat/createchat.page.ts"],"names":[],"mappings":"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","file":"default~connect-myconversations-myconversations-module~pages-main-tab-main-tab-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n    <ion-button (click)=\\\"backButton()\\\"><ion-icon name=\\\"chevron-back-outline\\\"></ion-icon></ion-button>\\n    </ion-buttons>\\n    <ion-title>{{title}}</ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n    <div *ngIf=\\\"page === 1\\\">\\n      <ion-searchbar [(ngModel)]=\\\"searchKeyword\\\" debounce=\\\"500\\\" (ionChange)=\\\"executeSearch($event)\\\" (ionCancel)=\\\"cancelSearch($event)\\\"></ion-searchbar>\\n      <div class=\\\"selected-buttons\\\">\\n        <ion-button size=\\\"small\\\" *ngFor=\\\"let person of selectedAppUsers\\\" (click)=\\\"unselect(person)\\\">{{person.name}}<ion-icon name=\\\"close-circle\\\" style=\\\"margin-left: 5px;\\\"></ion-icon></ion-button>\\n      </div>\\n      <form *ngIf=\\\"displayGroup\\\" [formGroup]=\\\"chatForm\\\">\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Chat Name *</ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n        </ion-item>\\n      </form>\\n    </div>\\n    <div *ngIf=\\\"page === 2\\\" style=\\\"margin-left: 10px; color: grey;\\\">\\n      Select group type:\\n    </div>\\n    <div *ngIf=\\\"page === 3\\\">\\n      <div class=\\\"default-background\\\" [ngStyle]=\\\"{'background-image': 'url(' + (groupForm.value.background | background: userData.user._id) + ')'}\\\" >\\n        <div class=\\\"edit-icon\\\"></div>\\n        <div class=\\\"default-title\\\">\\n          {{groupForm.value.name}}\\n        </div>\\n        <div *ngIf=\\\"platform.is('cordova')\\\" class=\\\"edit-icon\\\" (click)=\\\"selectUploadFile($event)\\\">\\n          <ion-icon name=\\\"cog\\\" color=\\\"primary\\\"></ion-icon>\\n        </div>\\n        <div *ngIf=\\\"!platform.is('cordova')\\\" class=\\\"edit-icon\\\">\\n          <label for=\\\"image\\\"><ion-icon name=\\\"cog\\\" color=\\\"primary\\\"></ion-icon></label>\\n          <input type=\\\"file\\\" class=\\\"file-picker\\\" name=\\\"image\\\" id=\\\"image\\\" (change)=\\\"selectUploadFile($event)\\\" accept=\\\"image/*\\\"/>\\n        </div>\\n      </div>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid style=\\\"height: 100%\\\" *ngIf=\\\"ionSpinner\\\">\\n    <ion-row class=\\\"ion-justify-content-start ion-align-items-center\\\" style=\\\"height: 100%\\\">\\n      <ion-spinner name=\\\"dots\\\"></ion-spinner>\\n    </ion-row>\\n  </ion-grid>\\n  <div *ngIf=\\\"page === 1\\\">\\n    <ion-list-header>Friends</ion-list-header>\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let person of listOfFriends; trackBy: customTrackBy\\\" (click)=\\\"select(person)\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <ion-img *ngIf=\\\"person.avatar\\\" [src]=\\\"person.avatar\\\"></ion-img>\\n          <ion-img *ngIf=\\\"!person.avatar\\\" src=\\\"assets/img/avatar-default.jpg\\\"></ion-img>\\n        </ion-avatar>\\n        {{person.name}}\\n        <ion-icon color=\\\"button1\\\" *ngIf=\\\"!person.select\\\" name=\\\"radio-button-off\\\" slot=\\\"end\\\"></ion-icon>\\n        <ion-icon color=\\\"button1\\\" *ngIf=\\\"person.select\\\" name=\\\"checkmark-circle\\\" slot=\\\"end\\\"></ion-icon>\\n      </ion-item>\\n    </ion-list>\\n    <ion-list-header>{{userData.user.churches[userData.currentCommunityIndex].name}}</ion-list-header>\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let person of listOfAppUsers; trackBy: customTrackBy\\\" (click)=\\\"select(person)\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <ion-img *ngIf=\\\"person.avatar\\\" [src]=\\\"person.avatar\\\"></ion-img>\\n          <ion-img *ngIf=\\\"!person.avatar\\\" src=\\\"assets/img/avatar-default.jpg\\\"></ion-img>\\n        </ion-avatar>\\n        {{person.name}}\\n        <ion-icon color=\\\"button1\\\" *ngIf=\\\"!person.select\\\" name=\\\"radio-button-off\\\" slot=\\\"end\\\"></ion-icon>\\n        <ion-icon color=\\\"button1\\\" *ngIf=\\\"person.select\\\" name=\\\"checkmark-circle\\\" slot=\\\"end\\\"></ion-icon>\\n      </ion-item>\\n    </ion-list>\\n    <ion-infinite-scroll position=\\\"bottom\\\" (ionInfinite)=\\\"loadMorePeople($event)\\\">\\n      <ion-infinite-scroll-content></ion-infinite-scroll-content>\\n    </ion-infinite-scroll>\\n  </div>\\n  <div *ngIf=\\\"page === 2\\\">\\n    <ion-card (click)=\\\"selectGroupType('personal')\\\">\\n      <ion-card-header>\\n        <ion-card-title class=\\\"ion-text-center\\\">Personal Group</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-note color=\\\"grey\\\">\\n          A personal group is a private group chat. It does not belong to any community. You and your members can invite others to join.\\n        </ion-note>\\n      </ion-card-content>\\n    </ion-card>\\n    <ion-card (click)=\\\"selectGroupType('community')\\\">\\n      <ion-card-header>\\n        <ion-card-title class=\\\"ion-text-center\\\">Community Group</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-note color=\\\"grey\\\">\\n          A community group is a group that belongs to a community. It can be set as private or public. A community group is managed by its leader (you) and the community administrators.\\n        </ion-note>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n  <div *ngIf=\\\"page === 3\\\">\\n    <form [formGroup]=\\\"groupForm\\\">\\n      <ion-list>\\n        <ion-item-group>\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">{{title}} Name</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n          </ion-item>\\n          <ion-item class=\\\"form-error-list\\\" *ngIf=\\\"!groupForm.controls.name.pristine && !groupForm.controls.name.valid\\\">\\n            <p class=\\\"form-error\\\" slot=\\\"end\\\" *ngIf=\\\"!groupForm.controls.name.pristine && groupForm.controls.name.hasError('required')\\\">\\n              This is a required field.\\n            </p>\\n          </ion-item>\\n        </ion-item-group>\\n        <div *ngIf=\\\"type === 'community'\\\">\\n          <ion-item-group>\\n            <ion-item-divider></ion-item-divider>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Community</ion-label>\\n              <ion-select [interfaceOptions]=\\\"{cssClass: 'level-15'}\\\" #church formControlName=\\\"churchId\\\" (ionChange)=\\\"changeCommunity(church.value)\\\">\\n                <ion-select-option *ngFor=\\\"let church of churches\\\" [value]=\\\"church._id\\\">{{church.name}}</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-item class=\\\"form-error-list\\\" *ngIf=\\\"!groupForm.controls.churchId.pristine && !groupForm.controls.churchId.valid\\\">\\n              <p class=\\\"form-error\\\" slot=\\\"end\\\" *ngIf=\\\"!groupForm.controls.churchId.pristine && groupForm.controls.churchId.hasError('required')\\\">\\n                This is a required field.\\n              </p>\\n            </ion-item>\\n            <div *ngIf=\\\"groupForm.value.churchId !== ''\\\">\\n              <ion-item>\\n                <ion-label>List in Discover Section? <ion-icon name=\\\"information-circle\\\" (click)=\\\"explainDiscover()\\\"></ion-icon></ion-label>\\n                <ion-toggle formControlName=\\\"public_group\\\"></ion-toggle>\\n              </ion-item>\\n            </div>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Description</ion-label>\\n              <ion-textarea #textArea id=\\\"textArea\\\" rows=\\\"8\\\" class=\\\"detailstextarea\\\" type=\\\"text\\\" formControlName=\\\"details\\\"></ion-textarea>\\n            </ion-item>\\n          </ion-item-group>\\n          <ion-item-group>\\n            <ion-item-divider>\\n            </ion-item-divider>\\n            <ion-item lines=\\\"none\\\" (click)=\\\"showOptional = !showOptional\\\">\\n              <ion-label slot=\\\"start\\\">Optional</ion-label>\\n              <ion-button size=\\\"small\\\" slot=\\\"end\\\" fill=\\\"outline\\\" *ngIf=\\\"!showOptional\\\">Show More</ion-button>\\n            </ion-item>\\n            <div  *ngIf=\\\"showOptional\\\">\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Start Time</ion-label>\\n                <ion-datetime displayFormat=\\\"MMM DD, YYYY HH:mm\\\" pickerFormat=\\\"Z MMM DD, YYYY HH:mm\\\" min=\\\"2017\\\" max=\\\"2050-12-31\\\" formControlName=\\\"beginAtISOString\\\" [pickerOptions]=\\\"{cssClass: 'level-15'}\\\"></ion-datetime>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">End Time</ion-label>\\n                <ion-datetime displayFormat=\\\"MMM DD, YYYY HH:mm\\\" pickerFormat=\\\"Z MMM DD, YYYY HH:mm\\\" min=\\\"2017\\\" max=\\\"2050-12-31\\\" formControlName=\\\"endAtISOString\\\" [pickerOptions]=\\\"{cssClass: 'level-15'}\\\"></ion-datetime>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Day of the Week</ion-label>\\n                <ion-select [interfaceOptions]=\\\"{cssClass: 'level-15'}\\\" formControlName=\\\"meeting_day\\\">\\n                  <ion-select-option *ngFor=\\\"let day of days\\\" [value]=\\\"day.name\\\" [class.selected]=\\\"day.selected\\\">{{day.name}}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Meeting Frequency</ion-label>\\n                <ion-select [interfaceOptions]=\\\"{cssClass: 'level-15'}\\\" formControlName=\\\"meeting_frequency\\\">\\n                  <ion-select-option *ngFor=\\\"let frequency of frequencies\\\" [value]=\\\"frequency.name\\\" [class.selected]=\\\"frequency.selected\\\">{{frequency.name}}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item-divider></ion-item-divider>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Location/Room</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"location\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Street</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"street\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">City</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"city\\\"></ion-input>\\n              </ion-item>\\n              <ion-item class=\\\"form-error-list\\\" *ngIf=\\\"!groupForm.controls.city.pristine && !groupForm.controls.city.valid\\\">\\n                <p class=\\\"form-error\\\" slot=\\\"end\\\" *ngIf=\\\"!groupForm.controls.city.pristine && groupForm.controls.city.hasError('required')\\\">\\n                  This is a required field.\\n                </p>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">State</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"state\\\"></ion-input>\\n              </ion-item>\\n              <ion-item class=\\\"form-error-list\\\" *ngIf=\\\"!groupForm.controls.state.pristine && !groupForm.controls.state.valid\\\">\\n                <p class=\\\"form-error\\\" slot=\\\"end\\\" *ngIf=\\\"!groupForm.controls.state.pristine && groupForm.controls.state.hasError('required')\\\">\\n                  This is a required field.\\n                </p>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"stacked\\\">Country</ion-label>\\n                <ion-select [interfaceOptions]=\\\"{cssClass: 'level-15'}\\\" formControlName=\\\"country\\\">\\n                  <ion-select-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.name\\\" [class.selected]=\\\"country.selected\\\">{{country.name}}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item class=\\\"form-error-list\\\" *ngIf=\\\"!groupForm.controls.country.pristine && !groupForm.controls.country.valid\\\">\\n                <p class=\\\"form-error\\\" slot=\\\"end\\\" *ngIf=\\\"!groupForm.controls.country.pristine && groupForm.controls.country.hasError('required')\\\">\\n                  This is a required field.\\n                </p>\\n              </ion-item>\\n            </div>\\n\\n          </ion-item-group>\\n          <ion-item-group *ngIf=\\\"showOptional\\\">\\n            <ion-item-divider class=\\\"ion-text-wrap\\\" *ngIf=\\\"smsPlan\\\">\\n              <ion-label>Communication Preference</ion-label>\\n              <p>You can control chat message delivery to the Email and SMS members.</p>\\n            </ion-item-divider>\\n            <ion-item-divider class=\\\"ion-text-wrap\\\" *ngIf=\\\"!smsPlan\\\">\\n              <ion-label>Communication Preference</ion-label>\\n              <p>You can control chat message delivery to the Email members.</p>\\n            </ion-item-divider>\\n            <ion-item>\\n              <ion-label class=\\\"ion-text-wrap\\\">Email members will receive messages</ion-label>\\n              <ion-toggle slot=\\\"end\\\" formControlName=\\\"emailDisabled\\\"></ion-toggle>\\n            </ion-item>\\n            <div *ngIf=\\\"smsPlan\\\">\\n              <ion-item>\\n                <ion-label class=\\\"ion-text-wrap\\\">SMS members will receive messages</ion-label>\\n                <ion-toggle slot=\\\"end\\\" formControlName=\\\"smsDisabled\\\"></ion-toggle>\\n              </ion-item>\\n              <ion-item-divider class=\\\"ion-text-wrap\\\">\\n                <p>SMS keyword is a word of your choice for the text-to-join feature</p>\\n              </ion-item-divider>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-label position=\\\"stacked\\\">SMS Keyword</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"smsKeyword\\\"></ion-input>\\n              </ion-item>\\n            </div>\\n          </ion-item-group>\\n        </div>\\n      </ion-list>\\n    </form>\\n  </div>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n      <ion-button *ngIf=\\\"page === 1\\\" expand=\\\"full\\\" shape=\\\"round\\\" size=\\\"medium\\\" (click)=\\\"selectAppUsers()\\\" color=\\\"primary\\\" [disabled]=\\\"totalSelected < 1 || (totalSelected > 1 && chatForm.hasError('required'))\\\">Select {{totalSelected}}&nbsp;<span *ngIf=\\\"totalSelected <= 1\\\">Person</span><span *ngIf=\\\"totalSelected > 1\\\">People</span></ion-button>\\n      <ion-button *ngIf=\\\"page === 3\\\" expand=\\\"full\\\" shape=\\\"round\\\" size=\\\"medium\\\" (click)=\\\"createGroupChat()\\\" color=\\\"primary\\\">Create {{this.title}}</ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n\\n\"","export default \"app-createchat ion-spinner {\\n  position: absolute;\\n  margin: 48%;\\n}\\napp-createchat .default-background {\\n  display: table;\\n  min-height: 150px;\\n  background-size: cover;\\n  width: 100%;\\n}\\napp-createchat .edit-icon {\\n  position: absolute;\\n  width: 20px;\\n  right: 2px;\\n  bottom: 2px;\\n}\\napp-createchat .default-title {\\n  display: table-cell;\\n  vertical-align: middle;\\n  text-align: center;\\n  font-size: 2em;\\n  color: #fff;\\n  -webkit-text-stroke: thin;\\n  /*    text-shadow:\\n              -1px -1px 0 #000,\\n              1px -1px 0 #000,\\n              -1px 1px 0 #000,\\n              1px 1px 0 #000;*/\\n}\\napp-createchat .selected-buttons {\\n  display: block;\\n  max-height: 100px;\\n  overflow-y: scroll;\\n  width: 100%;\\n  padding: 0 5px;\\n}\\napp-createchat ion-card {\\n  height: 30%;\\n}\\napp-createchat .group-type-title {\\n  margin: 10% 0;\\n}\\napp-createchat form {\\n  background-color: var(--ion-color-secondary);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jYWxpeGh1YW5nL1dlYl9EZXZlbG9wbWVudC9yZXN0dm8vcmVzdHZvLWFwcC9zcmMvYXBwL3BhZ2VzL2Nvbm5lY3QvY3JlYXRlY2hhdC9jcmVhdGVjaGF0LnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvY29ubmVjdC9jcmVhdGVjaGF0L2NyZWF0ZWNoYXQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVFO0VBQ0Usa0JBQUE7RUFDQSxXQUFBO0FDREo7QURJRTtFQUNFLGNBQUE7RUFDQSxpQkFBQTtFQUNBLHNCQUFBO0VBQ0EsV0FBQTtBQ0ZKO0FES0U7RUFDRSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0EsV0FBQTtBQ0hKO0FETUU7RUFDRSxtQkFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBQ0EsV0FBQTtFQUNBLHlCQUFBO0VBQ0o7Ozs7OEJBQUE7QUNBQTtBRE9FO0VBQ0UsY0FBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0VBQ0EsY0FBQTtBQ0xKO0FEUUU7RUFDRSxXQUFBO0FDTko7QURTRTtFQUNFLGFBQUE7QUNQSjtBRFVFO0VBQ0UsNENBQUE7QUNSSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Nvbm5lY3QvY3JlYXRlY2hhdC9jcmVhdGVjaGF0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImFwcC1jcmVhdGVjaGF0IHtcblxuICBpb24tc3Bpbm5lciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIG1hcmdpbjogNDglO1xuICB9XG5cbiAgLmRlZmF1bHQtYmFja2dyb3VuZCB7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgbWluLWhlaWdodDogMTUwcHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5lZGl0LWljb24ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMjBweDtcbiAgICByaWdodDogMnB4O1xuICAgIGJvdHRvbTogMnB4O1xuICB9XG5cbiAgLmRlZmF1bHQtdGl0bGUge1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAyLjBlbTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICAtd2Via2l0LXRleHQtc3Ryb2tlOiB0aGluO1xuLyogICAgdGV4dC1zaGFkb3c6XG4gICAgICAgICAgICAtMXB4IC0xcHggMCAjMDAwLFxuICAgICAgICAgICAgMXB4IC0xcHggMCAjMDAwLFxuICAgICAgICAgICAgLTFweCAxcHggMCAjMDAwLFxuICAgICAgICAgICAgMXB4IDFweCAwICMwMDA7Ki9cbiAgfVxuXG4gIC5zZWxlY3RlZC1idXR0b25zIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXgtaGVpZ2h0OiAxMDBweDtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMCA1cHg7XG4gIH1cblxuICBpb24tY2FyZCB7XG4gICAgaGVpZ2h0OiAzMCU7XG4gIH1cblxuICAuZ3JvdXAtdHlwZS10aXRsZSB7XG4gICAgbWFyZ2luOiAxMCUgMDtcbiAgfVxuXG4gIGZvcm0ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci1zZWNvbmRhcnkpO1xuICB9XG59XG4iLCJhcHAtY3JlYXRlY2hhdCBpb24tc3Bpbm5lciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbWFyZ2luOiA0OCU7XG59XG5hcHAtY3JlYXRlY2hhdCAuZGVmYXVsdC1iYWNrZ3JvdW5kIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIG1pbi1oZWlnaHQ6IDE1MHB4O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB3aWR0aDogMTAwJTtcbn1cbmFwcC1jcmVhdGVjaGF0IC5lZGl0LWljb24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAyMHB4O1xuICByaWdodDogMnB4O1xuICBib3R0b206IDJweDtcbn1cbmFwcC1jcmVhdGVjaGF0IC5kZWZhdWx0LXRpdGxlIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDJlbTtcbiAgY29sb3I6ICNmZmY7XG4gIC13ZWJraXQtdGV4dC1zdHJva2U6IHRoaW47XG4gIC8qICAgIHRleHQtc2hhZG93OlxuICAgICAgICAgICAgICAtMXB4IC0xcHggMCAjMDAwLFxuICAgICAgICAgICAgICAxcHggLTFweCAwICMwMDAsXG4gICAgICAgICAgICAgIC0xcHggMXB4IDAgIzAwMCxcbiAgICAgICAgICAgICAgMXB4IDFweCAwICMwMDA7Ki9cbn1cbmFwcC1jcmVhdGVjaGF0IC5zZWxlY3RlZC1idXR0b25zIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC1oZWlnaHQ6IDEwMHB4O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwIDVweDtcbn1cbmFwcC1jcmVhdGVjaGF0IGlvbi1jYXJkIHtcbiAgaGVpZ2h0OiAzMCU7XG59XG5hcHAtY3JlYXRlY2hhdCAuZ3JvdXAtdHlwZS10aXRsZSB7XG4gIG1hcmdpbjogMTAlIDA7XG59XG5hcHAtY3JlYXRlY2hhdCBmb3JtIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XG59Il19 */\"","import { Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport {CameraResultType, CameraSource, Plugins} from '@capacitor/core';\nimport { AlertController, IonContent, IonInfiniteScroll, ModalController, Platform} from '@ionic/angular';\nimport { Aws } from '../../../services/aws.service';\nimport { UserData } from '../../../services/user.service';\nimport { Churches } from '../../../services/church.service';\nimport { Groups } from '../../../services/group.service';\nimport { Auth } from '../../../services/auth.service';\nimport { Chat } from \"../../../services/chat.service\"\nimport {GroupchatPage} from \"../../group/groupchat/groupchat.page\";\n\n@Component({\n  selector: 'app-createchat',\n  templateUrl: './createchat.page.html',\n  styleUrls: ['./createchat.page.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CreatechatPage implements OnInit {\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n    @ViewChild(IonInfiniteScroll, {static: false}) infiniteScroll: IonInfiniteScroll;\n\n    chatForm: FormGroup;\n    title: string = \"Create Chat\";\n    churchId: string = '';\n    pageNum: number = 0;\n    displayGroup: boolean = false;\n    reachedEnd: boolean = false;\n    searchKeyword = '';\n    allFriends: any = [];\n    listOfFriends: any = [];\n    listOfAppUsers: any = [];\n    selectedAppUsers: any = [];\n    group: any;\n    totalSelected: number = 0;\n    loading: any;\n    ionSpinner: boolean = true;\n    page = 1;\n    type: string;\n    showOptional = false;\n\n    //group creation variables\n    groupForm: FormGroup;\n    days: Array<{name: string, selected: boolean}> = [];\n    frequencies: Array<{name: string, selected: boolean}> = [];\n    countries: Array<{name: string, selected: boolean}> = [];\n    churches: Array<{_id: string, name: string, selected: boolean}> = [];\n    smsPlan: boolean = false;\n\n    country_list: Array<string> = [\"United States\",\"Afghanistan\",\"Albania\",\"Algeria\",\"American Samoa\",\"Andorra\",\"Angola\",\"Anguilla\",\"Antarctica\",\"Antigua and Barbuda\",\"Argentina\",\"Armenia\",\"Aruba\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia and Herzegovina\", \"Botswana\", \"Bouvet Island\", \"Brazil\", \"British Indian Ocean Territory\", \"Brunei Darussalam\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Cape Verde\", \"Cayman Islands\", \"Central African Republic\", \"Chad\", \"Chile\", \"China\", \"Christmas Island\", \"Cocos (Keeling) Islands\", \"Colombia\", \"Comoros\", \"Congo\", \"Congo, the Democratic Republic of the\", \"Cook Islands\", \"Costa Rica\", \"Cote D'Ivoire\", \"Croatia\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands (Malvinas)\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Guiana\", \"French Polynesia\", \"French Southern Territories\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guadeloupe\", \"Guam\", \"Guatemala\", \"Guinea\",\"Guinea-Bissau\",\"Guyana\",\"Haiti\",\"Heard Island and Mcdonald Islands\",\"Holy See (Vatican City State)\",\"Honduras\",\"Hong Kong\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran, Islamic Republic of\",\"Iraq\",\"Ireland\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Korea, Democratic People's Republic of\",\"Korea, Republic of\",\"Kuwait\",\"Kyrgyzstan\",\"Lao People's Democratic Republic\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libyan Arab Jamahiriya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Macao\",\"Macedonia, the Former Yugoslav Republic of\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall Islands\",\"Martinique\",\"Mauritania\",\"Mauritius\",\"Mayotte\",\"Mexico\",\"Micronesia, Federated States of\",\"Moldova, Republic of\",\"Monaco\",\"Mongolia\",\"Montserrat\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauru\",\"Nepal\",\"Netherlands\",\"Netherlands Antilles\",\"New Caledonia\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"Niue\",\"Norfolk Island\",\"Northern Mariana Islands\",\"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Palestinian Territory, Occupied\",\"Panama\",\"Papua New Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Pitcairn\",\"Poland\",\"Portugal\",\"Puerto Rico\",\"Qatar\",\"Reunion\",\"Romania\",\"Russian Federation\",\"Rwanda\",\"Saint Helena\",\"Saint Kitts and Nevis\",\"Saint Lucia\",\"Saint Pierre and Miquelon\",\"Saint Vincent and the Grenadines\",\"Samoa\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi Arabia\",\"Senegal\",\"Serbia and Montenegro\",\"Seychelles\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\"Somalia\",\"South Africa\",\"South Georgia and the South Sandwich Islands\",\"Spain\",\"Sri Lanka\",\"Sudan\",\"Suriname\",\"Svalbard and Jan Mayen\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syrian Arab Republic\",\"Taiwan, Province of China\",\"Tajikistan\",\"Tanzania, United Republic of\",\"Thailand\",\"Timor-Leste\",\"Togo\",\"Tokelau\",\"Tonga\",\"Trinidad and Tobago\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Turks and Caicos Islands\",\"Tuvalu\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United States Minor Outlying Islands\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Venezuela\",\"Viet Nam\",\"Virgin Islands, British\",\"Virgin Islands, US\",\"Wallis and Futuna\",\"Western Sahara\",\"Yemen\",\"Zambia\",\"Zimbabwe\"];\n    day_list: Array<string> = ['', \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Varied or N/A\", \"To be determined\"];\n    frequency_list: Array<string> = ['', \"Weekly\", \"Every Other Week\", \"One-Time\", \"Monthly\", \"1st and 3rd Week\", \"2nd and 4th Week\", \"N/A\"];\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private alertCtrl: AlertController,\n        public modalCtrl: ModalController,\n        public platform: Platform,\n        private awsService: Aws,\n        private authService: Auth,\n        public userData: UserData,\n        private churchService: Churches,\n        private groupService: Groups,\n        private chatService: Chat,\n    ) {\n        this.chatForm = this.formBuilder.group({\n            name: ['', Validators.required],\n        });\n        this.churchId = this.userData.user.churches[this.userData.currentCommunityIndex]._id;\n    }\n\n    ngOnInit() {\n        this.renderList();\n        this.setupLoadPeople();\n\n        setTimeout(() => {\n            this.ionSpinner = false;\n        }, 5000);\n    }\n\n    async renderList() {\n        this.listOfFriends = [];\n        this.chatService.conversations.forEach((obj) => {\n            if ((obj.conversation.type === 'connect') && obj.data.name.toLowerCase().indexOf(this.searchKeyword.toLowerCase()) > -1) {\n                this.listOfFriends.push({_id: obj.data.participant._id, name: obj.data.name, avatar: obj.data.participant.avatar, badge: obj.data.badge, order: null, select: false});\n            }\n        });\n        this.listOfFriends.forEach((obj, index) => { // to do a stable sort next, first remember the order\n            obj.order = index;\n        });\n        this.listOfFriends.sort((a, b) => {\n            let badge_diff = b.badge - a.badge;\n            if (badge_diff !== 0) {\n                return badge_diff; // only sort when there is an actual difference\n            } else {\n                return a.order - b.order; // preserve the order\n            }\n        });\n    }\n\n    setupLoadPeople(){\n        setTimeout(() => {\n            this.infiniteScroll.disabled = false;\n            this.reachedEnd = false;\n            this.listOfAppUsers = [];\n            this.pageNum = 0;\n            this.loadMorePeople({target: this.infiniteScroll});\n        }, 100);\n    }\n\n    async loadMorePeople(event){\n        this.pageNum++;\n        if (!this.reachedEnd){\n            const churchAppUsers: any = await this.churchService.loadChurchAppUsers(this.churchId, this.searchKeyword, this.pageNum);\n            this.ionSpinner = false;\n            if (!churchAppUsers.length){\n                this.reachedEnd = true;\n                event.target.disabled = true;\n            } else {\n                churchAppUsers.forEach((appuser) => {\n                    if (appuser._id !== this.userData.user._id){\n                        appuser.name = appuser.first_name + \" \" + appuser.last_name;\n                        this.listOfAppUsers.push({_id: appuser._id, name: appuser.name, avatar: appuser.avatar, select: false});\n                    }\n                });\n            }\n            event.target.complete();\n        } else {\n            this.ionSpinner = false;\n            event.target.complete();\n        }\n    }\n\n    executeSearch(event){\n        event.stopPropagation();\n        this.setupLoadPeople();\n        this.renderList();\n        setTimeout(() => {\n            //Keyboard.hide();\n        }, 2000);\n    }\n\n    cancelSearch(event){\n        event.stopPropagation();\n        this.searchKeyword = '';\n        this.setupLoadPeople();\n        this.renderList();\n    }\n\n    select(person){\n        if (person.select){\n            person.select = false;\n            this.totalSelected--;\n            if(this.totalSelected < 2){\n                this.displayGroup = false;\n            }\n            let index = this.selectedAppUsers.indexOf(person);\n            this.selectedAppUsers.splice(index, 1);\n        } else {\n            person.select = true;\n            this.totalSelected++;\n            if(this.totalSelected > 1){\n                this.displayGroup = true;\n            }\n            this.selectedAppUsers.unshift(person);\n            this.searchKeyword = '';\n        }\n        this.modifyChatName();\n    }\n\n    unselect(person){\n        this.totalSelected--;\n        if (this.totalSelected < 2){\n            this.displayGroup = false;\n        }\n        let index = this.listOfAppUsers.indexOf(person);\n        if (index > -1){\n            this.listOfAppUsers[index].select = false;\n        }\n        index = this.listOfFriends.indexOf(person);\n        if (index > -1){\n            this.listOfFriends[index].select = false;\n        }\n        index = this.selectedAppUsers.indexOf(person);\n        if (index > -1){\n            this.selectedAppUsers.splice(index, 1);\n        }\n        this.modifyChatName();\n    }\n\n    modifyChatName(){\n        if (this.chatForm.controls.name.pristine){\n            if (this.totalSelected === 1){\n                this.chatForm.patchValue({name: this.userData.user.first_name + \" and \" + this.selectedAppUsers[0].name});\n            } else if (this.totalSelected === 2){\n                this.chatForm.patchValue({name: this.userData.user.first_name + \", \" + this.selectedAppUsers[0].name.split(' ')[0] + \", \" + this.selectedAppUsers[1].name.split(' ')[0]});\n            } else if (this.totalSelected > 2){\n                this.chatForm.patchValue({name: this.userData.user.first_name + \", \" + this.selectedAppUsers[0].name.split(' ')[0] + \" and \" + (this.totalSelected - 1).toString() + \" friends\"});\n            }\n        }\n    }\n\n    async selectAppUsers(){\n        if (this.totalSelected === 1){ //direct message with 1 person\n            this.createPrivateChat();\n        } else if (this.totalSelected > 1) { //direct message with 2 or more people\n            /*this.page = 2;\n            this.title = 'Create Group Chat';*/\n            this.selectGroupType('personal');\n        }\n    }\n\n    async createPrivateChat(){\n        this.ionSpinner = true;\n        const data: any = await this.chatService.getConversationByRecipientId(this.selectedAppUsers[0]._id, false, null);\n        this.ionSpinner = false;\n        if (data.length){//if the recipient has been connected\n            const conversation = data[0];\n            if (conversation.type == \"connect\") {\n                this.modalCtrl.dismiss();\n                setTimeout(async () => {\n                    this.chatService.currentChatProps.push({\n                        conversationId: conversation._id,\n                        name: this.selectedAppUsers[0].name,\n                        page: 'chat',\n                        recipient: this.selectedAppUsers[0],\n                        modalPage: true\n                    });\n                    const messagePage = await this.modalCtrl.create({\n                        component: GroupchatPage,\n                        componentProps: this.chatService.currentChatProps[this.chatService.currentChatProps.length - 1]\n                    });\n                    await messagePage.present();\n                }, 50);\n            } else if (conversation.type === \"request\") {\n                if (conversation.blockedBy){\n                    if (conversation.blockedBy === this.userData.user._id) {\n                        const alert = await this.alertCtrl.create({\n                            header: 'User is Blocked',\n                            subHeader: 'Do you want to reconnect with ' + this.selectedAppUsers[0].name + '?',\n                            buttons: [{\n                                text: 'Yes',\n                                handler: () => {\n                                    const navTransition = alert.dismiss();\n                                    navTransition.then(async () => {\n                                        await this.chatService.unblockConversation(conversation._id, this.selectedAppUsers[0]._id);\n                                        this.modalCtrl.dismiss();\n                                        this.chatService.currentChatProps.push({\n                                            conversationId: conversation._id,\n                                            name: this.selectedAppUsers[0].name,\n                                            page: 'chat',\n                                            recipient: this.selectedAppUsers[0],\n                                            modalPage: true\n                                        });\n                                        const messagePage = await this.modalCtrl.create({\n                                            component: GroupchatPage,\n                                            componentProps: this.chatService.currentChatProps[this.chatService.currentChatProps.length - 1]\n                                        });\n                                        await messagePage.present();\n                                    });\n                                }\n                            }, {text: 'No'}],\n                            cssClass: 'level-15'\n                        });\n                        alert.present();\n                    } else {\n                        const alert = await this.alertCtrl.create({\n                            header: 'Blocked by ' + this.selectedAppUsers[0].name + '.',\n                            subHeader: 'You cannot direct message this user while being blocked.',\n                            buttons: [{ text: 'Dismiss' }],\n                            cssClass: 'level-15'\n                        });\n                        await alert.present();\n                    }\n                } else {\n                    const alert = await this.alertCtrl.create({\n                        header: 'Connect request is pending',\n                        subHeader: 'You have already sent a connect request to this user.',\n                        buttons: [{ text: 'Dismiss' }],\n                        cssClass: 'level-15'\n                    });\n                    await alert.present();\n                }\n            }\n        } else {\n            const alert = await this.alertCtrl.create({\n                header: 'Connect to ' + this.selectedAppUsers[0].name,\n                subHeader: 'You are not yet connected with ' + this.selectedAppUsers[0].name + \". Do you want to direct message \" + this.selectedAppUsers[0].name + '?',\n                buttons: [{ text: 'Yes',\n                    handler: () => {\n                        console.log(\"creating new conversation...\");\n                        let navTransition = alert.dismiss();\n                        navTransition.then( async () => {\n                            await this.userData.checkPushNotification();\n                            const welcomeMessage = this.userData.user.first_name + ' ' + this.userData.user.last_name + ' is now connected with you.';\n                            const conversationId = await this.chatService.newConversation(this.selectedAppUsers[0]._id, { composedMessage : welcomeMessage, type: \"connect\" });\n                            this.chatService.refreshTabBadges();\n                            this.modalCtrl.dismiss();\n                            this.chatService.currentChatProps.push({\n                                conversationId: conversationId,\n                                name: this.selectedAppUsers[0].name,\n                                page: 'chat',\n                                recipient: this.selectedAppUsers[0],\n                                modalPage: true\n                            });\n                            const messagePage = await this.modalCtrl.create({\n                                component: GroupchatPage,\n                                componentProps: this.chatService.currentChatProps[this.chatService.currentChatProps.length - 1]\n                            });\n                            await messagePage.present();\n                        });\n                    }}, { text: 'Cancel' }],\n                cssClass: 'level-15'\n            });\n            alert.present();\n        }\n    }\n\n    async selectGroupType(type){\n        this.type = type;\n        let controlConfigs = {\n            name: [this.chatForm.value.name, Validators.required],\n            background: [''],\n            emailDisabled: [false],\n            smsDisabled: [false],\n            smsKeyword: [''],\n            churchId: [''],\n            published: [false],\n            flagged: [false],\n            public_group: [false],\n            details: [''],\n            meeting_day: [''],\n            meeting_frequency: [''],\n            beginAtISOString: [new Date().toISOString()],\n            endAtISOString: [new Date().toISOString()],\n            location: [''],\n            street: [''],\n            city: [''],\n            state: [''],\n            country: [''],\n            conversation: [''] // not a GUI element but required for group chat creation\n        };\n        this.churches = this.userData.user.churches.map((c) => {return {_id: c._id, name: c.name, selected: false};});\n        this.churches.unshift({_id: '', name: 'None', selected: false});\n        this.countries = this.country_list.map((c) => {return {name: c, selected: false};});\n        this.days = this.day_list.map((c)=>{return {name: c, selected: false};});\n        this.frequencies = this.frequency_list.map((c)=>{return {name: c, selected: false};});\n        //populate the community info\n        if (this.type === 'community'){\n            this.title = 'Community Group';\n            controlConfigs.churchId[0] = this.userData.user.churches[this.userData.currentCommunityIndex]._id;\n            controlConfigs = await this.loadCommunityInfo(controlConfigs, this.churchId);\n            this.page = 3;\n        } else if (this.type === 'personal'){\n            // clear the settings\n            this.title = 'Personal Group';\n            controlConfigs.churchId[0] = '';\n            this.page = 3;\n        }\n        this.groupForm = this.formBuilder.group(controlConfigs);\n    }\n\n    async loadCommunityInfo(controlConfigs, id){\n        try {\n            const [church] = await this.churchService.loadChurchProfile(id);\n            controlConfigs.city = church.meeting_location.city;\n            controlConfigs.state = church.meeting_location.state;\n            controlConfigs.country = church.meeting_location.country;\n            this.smsPlan = church.payment_type === \"SMS\";\n            return controlConfigs;\n        } catch (err){\n            console.log(err);\n        }\n    }\n\n    async changeCommunity(id){\n        try {\n            const [church] = await this.churchService.loadChurchProfile(id);\n            this.groupForm.patchValue(church.meeting_location);\n            this.smsPlan = church.payment_type === \"SMS\";\n        } catch (err){\n            console.log(err);\n        }\n    }\n\n    async createGroupChat(){\n        try {\n            this.ionSpinner = true;\n            this.group = this.groupForm.value;\n            if (this.type === 'community'){\n                this.group.meeting_location = {\n                    location: this.group.location,\n                    street: this.group.street,\n                    city: this.group.city,\n                    state: this.group.state,\n                    country: this.group.country\n                };\n            } else if (this.type === 'personal') {\n                this.group.meeting_location = {location: '', street: '', city: '', state: '', country: ''};\n                this.group.churchId = '';\n            }\n            this.group.beginAt = new Date(new Date(this.group.beginAtISOString).getTime() + new Date().getTimezoneOffset()*60000).toISOString();\n            this.group.endAt = new Date(new Date(this.group.endAtISOString).getTime() + new Date().getTimezoneOffset()*60000).toISOString();\n            if (!this.group.background.length) {\n                delete this.group.background;\n            }\n            this.group.emailDisabled = !this.group.emailDisabled; // reverse the boolean of the toggle interface\n            this.group.smsDisabled = !this.group.smsDisabled; // reverse the boolean of the toggle interface\n            const createdGroup: any = await this.groupService.createGroupProfile(this.group);\n            this.userData.user.groups.push({_id: createdGroup._id, name: createdGroup.name, role: \"Leader\", churchId: createdGroup.churchId});\n            const data = { groups: [createdGroup], appUsers: this.selectedAppUsers };\n            await this.groupService.addNewAppUsers(data);\n            this.selectedAppUsers.forEach((appuser) => {\n                this.userData.socket.emit('refresh user status', appuser._id, {type: 'update group participation', conversationId: null});\n            });\n            this.chatService.currentChatProps.push({\n                conversationId: createdGroup.conversation,\n                name: createdGroup.name,\n                group: createdGroup,\n                page: 'chat',\n                badge: 0,\n                modalPage: this.platform.width() < 768\n            });\n            this.ionSpinner = false;\n            this.modalCtrl.dismiss(true);\n        } catch (err) {\n            if (err) {\n                console.log(JSON.stringify(err));\n                this.noNetworkConnection();\n                this.ionSpinner = false;\n            }\n        }\n    }\n\n    async selectUploadFile(event){\n        try {\n            let result: any;\n            if (this.platform.is('cordova')) {\n                const { Camera } = Plugins;\n                const image = await Camera.getPhoto({\n                    quality: 60,\n                    width: 1280,\n                    allowEditing: false,\n                    resultType: CameraResultType.DataUrl,\n                    source: CameraSource.Prompt,\n                    correctOrientation: false\n                });\n                if (this.groupForm.value.churchId.length ) {\n                    result = await this.awsService.uploadImage('communities', this.groupForm.value.churchId, image, 'createchat');\n                } else {\n                    result = await this.awsService.uploadImage('users', this.userData.user._id, image, 'createchat');\n                }\n            } else {\n                const compressed = await this.awsService.compressPhoto(event.target.files[0]);\n                if (this.groupForm.value.churchId.length ) {\n                    result = await this.awsService.uploadFile('communities', this.groupForm.value.churchId, compressed, 'createchat');\n                } else {\n                    result = await this.awsService.uploadFile('users', this.userData.user._id, compressed, 'createchat');\n                }\n            }\n            if(result === \"Upload succeeded\"){\n                if (this.groupForm.value.background && this.groupForm.value.background.length){\n                    await this.awsService.removeFile(this.groupForm.value.background); //remove the previous background from Digital Ocean\n                }\n                this.groupForm.patchValue({background: this.awsService.url});\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    backButton(){\n        if (this.page > 1){\n            this.page--;\n            if (this.page === 1){\n              this.title = 'Create Chat';\n            } else if (this.page === 2){\n              //this.title = 'Create Group Chat';\n                this.page--;\n                this.title = 'Create Chat';\n            }\n        } else {\n            this.modalCtrl.dismiss(false);\n        }\n    }\n\n    // this function is used by Angular *ngFor to track the dynamic DOM creation and destruction\n    customTrackBy(index: number, item: any): any {\n        return index;\n    }\n\n    async noNetworkConnection(){\n        const networkAlert = await this.alertCtrl.create({\n            header: 'No Internet Connection',\n            subHeader: 'Please check your internet connection.',\n            buttons: ['Dismiss'],\n            cssClass: 'level-15'\n        });\n        await networkAlert.present();\n    }\n}\n"],"sourceRoot":"webpack:///"}