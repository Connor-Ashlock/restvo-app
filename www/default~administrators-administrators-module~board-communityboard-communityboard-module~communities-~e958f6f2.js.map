{"version":3,"sources":["./src/app/pages/connect/invitetoconnect/invitetoconnect.page.html","./src/app/pages/connect/invitetoconnect/invitetoconnect.page.scss","./src/app/pages/connect/invitetoconnect/invitetoconnect.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,mRAAoN,OAAO,swBAAswB,cAAc,oFAAoF,+BAA+B,2FAA2F,yBAAyB,g/CAAg/C,aAAa,0KAA0K,aAAa,+SAA+S,YAAY,kaAAka,eAAe,+SAA+S,eAAe,2WAA2W,eAAe,qWAAqW,eAAe,4D;;;;;;;;;;;;ACAjrJ;AAAe,oGAAqC,mBAAmB,+BAA+B,qBAAqB,iBAAiB,oBAAoB,0BAA0B,GAAG,6CAA6C,miC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9J;AAChC;AACqB;AACO;AACkC;AAChD;AACE;AACH;AACH;AAQtD;IAoCI,6BACoB,GAAQ,EACR,aAA4B,EAC5B,QAAkB,EAClB,SAA0B,EAC1B,WAA8B,EAC/B,SAA0B,EACzB,SAAoB,EACpB,QAAkB,EAClB,WAAiB,EAClB,QAAkB,EACjB,aAAuB,EACvB,YAAoB;QAXpB,QAAG,GAAH,GAAG,CAAK;QACR,kBAAa,GAAb,aAAa,CAAe;QAC5B,aAAQ,GAAR,QAAQ,CAAU;QAClB,cAAS,GAAT,SAAS,CAAiB;QAC1B,gBAAW,GAAX,WAAW,CAAmB;QAC/B,cAAS,GAAT,SAAS,CAAiB;QACzB,cAAS,GAAT,SAAS,CAAW;QACpB,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAM;QAClB,aAAQ,GAAR,QAAQ,CAAU;QACjB,kBAAa,GAAb,aAAa,CAAU;QACvB,iBAAY,GAAZ,YAAY,CAAQ;QAzCxC,SAAI,GAAW,CAAC,CAAC;QACjB,UAAK,GAAG,EAAE,CAAC;QAEX,qBAAgB,GAAQ,EAAE,CAAC;QAE3B,mBAAc,GAAQ,EAAE,CAAC;QACzB,SAAI,GAAW,EAAE,CAAC;QAClB,UAAK,GAAW,EAAE,CAAC;QACnB,iBAAY,GAAW,EAAE,CAAC;QAC1B,kBAAa,GAAW,CAAC,CAAC;QAC1B,iBAAY,GAAW,CAAC,CAAC;QACzB,kBAAa,GAAW,CAAC,CAAC;QAC1B,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,iBAAY,GAAQ,EAAE,CAAC;QACvB,eAAU,GAAY,IAAI,CAAC;QAE3B,mBAAc,GAAW,EAAE,CAAC;QAC5B,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,mBAAc,GAAQ,EAAE,CAAC;QACzB,yBAAoB,GAAQ,EAAE,CAAC;QAC/B,qBAAgB,GAAQ,EAAE,CAAC;QAE3B,eAAU,GAAQ,EAAE,CAAC;QACrB,kBAAa,GAAQ,EAAE,CAAC;QACxB,aAAQ,GAAQ,EAAE,CAAC;QACnB,iBAAY,GAAY,KAAK,CAAC;QAE9B,kBAAa,GAAG,KAAK,CAAC;IAenB,CAAC;IAEJ,sCAAQ,GAAR;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;QACxC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,EAAC,EAAE,qDAAqD;YACtG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACnD;QACD,IAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,EAAC,EAAE,iDAAiD;YAC/F,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC7C,IAAG,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAC;gBAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC5B;SACJ;QACD,IAAG,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAC,EAAE,mDAAmD;YACrG,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;YAChI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,EAAC,CAAC,CAAC;SAChG;QACD,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,uCAAS,GAAT;QAAA,iBAUC;QATG,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,IAAI,CAAC,IAAI,KAAK,qBAAqB,IAAI,IAAI,CAAC,IAAI,KAAK,iBAAiB,EAAC;YACvE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,2BAA2B;SACrD;aAAM,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,EAAC;YACpC,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;QACD,UAAU,CAAC;YACP,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC5B,CAAC,EAAE,KAAK,CAAC,CAAC;IACd,CAAC;IAEK,yCAAW,GAAjB;;;;;;;wBACQ,cAAc,GAAG,EAAE,CAAC;wBACxB,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;4BAC9B,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAC;gCAC5E,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,MAAM;oCAC5C,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CAAC,CAAC;6BACN;yBACJ;6BAAM,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;4BACnC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAC;gCACxE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,MAAM;oCAC1C,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CAAC,CAAC;6BACN;yBACJ;;;;wBAEwB,qBAAM,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;;wBAAlD,OAAO,GAAQ,SAAmC;wBACxD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wBACxB,IAAI,OAAO,EAAC;4BACR,OAAO,CAAC,OAAO,CAAC,UAAC,MAAM;gCACnB,IAAI,MAAM,CAAC,SAAS,EAAE;oCAClB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC;iCACrJ;4BACL,CAAC,CAAC,CAAC;4BACH,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAS,CAAC,EAAC,CAAC,IAAG,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;4BACtG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;yBAC7C;;;;wBAED,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;;;;;KAE/B;IAED,0CAAY,GAAZ;QAAA,iBAsBC;QArBG,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACrE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,aAAa,EAAE,CAAC,MAAM,EAAC,cAAc,EAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;gBACzG,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,QAAQ,EAAE;oBACV,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;wBACrB,IAAI,CAAC,KAAI,CAAC,IAAI,KAAK,aAAa,CAAC,IAAI,OAAO,CAAC,YAAY,EAAC;4BACtD,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,EAAE,OAAO,CAAC,YAAY,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;yBAC5J;6BAAM,IAAI,CAAC,KAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,OAAO,CAAC,MAAM,EAAC;4BACjD,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;yBAChJ;oBACL,CAAC,CAAC,CAAC;oBACH,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAS,CAAC,EAAC,CAAC,IAAG,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;oBACtG,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,gBAAgB,CAAC;iBAC7C;YACL,CAAC,EAAE,UAAC,GAAG;gBACH,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SAC1B;IACL,CAAC;IAED,6CAAe,GAAf;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;YAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B;aAAM,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAC;YAClC,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,uCAAS,GAAT;QACI,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,uDAAuD;QAC/E,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,6EAA6E;QACnG,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,6CAAe,GAAf;QAAA,iBAmDC;QAlDG,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,IAAI,KAAK,aAAa,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,EAAC;YAC5D,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;YAC/B,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,OAAO;gBAClC,IAAI,OAAO,CAAC,MAAM,EAAC;oBACf,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAAC;wBAC3B,IAAI,aAAW,GAAG,KAAK,CAAC;wBACxB,IAAI,eAAa,GAAG,EAAE,CAAC;wBACvB,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,MAAM;4BAChC,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;gCACpG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gCAC7C,aAAW,GAAG,IAAI,CAAC;6BACtB;4BACD,eAAa,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACrC,CAAC,CAAC,CAAC;wBACH,IAAI,CAAC,aAAW,EAAC,EAAE,2DAA2D;4BAC1E,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;yBACjE;wBACD,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,eAAa,EAAC,CAAC,CAAC;qBAC3E;yBAAM,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAAC;wBAClC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAC,CAAC,CAAC;qBACtE;iBACJ;YACL,CAAC,CAAC,CAAC;YACH,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,EAAE,+BAA+B;gBAC9E,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAClD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAC,CAAC;aAC7E;SACJ;aAAM,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAC;YAC7B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,OAAO;gBAClC,IAAI,OAAO,CAAC,MAAM,EAAC;oBACf,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAAC;wBAC3B,IAAI,eAAa,GAAG,EAAE,CAAC;wBACvB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;4BACzB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;4BACtC,eAAa,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;wBAClD,CAAC,CAAC,CAAC;wBACH,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,eAAa,EAAC,CAAC;qBAC1E;yBAAM,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAAC;wBAClC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAC,CAAC,CAAC;qBACtE;iBACJ;YACL,CAAC,CAAC,CAAC;YACH,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,EAAE,+BAA+B;gBACvE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACrC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC,CAAC;aACtE;SACJ;IACL,CAAC;IAEK,2CAAa,GAAnB;;;;;;4BACoB,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;4BAC1C,OAAO,EAAE,eAAe;yBAC3B,CAAC;;wBAFI,OAAO,GAAG,SAEd;wBACF,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAC,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;4BACpF,OAAO,CAAC,OAAO,EAAE,CAAC;wBACtB,CAAC,EAAE,UAAO,GAAG;;;;;wCACT,OAAO,CAAC,OAAO,EAAE,CAAC;wCACD,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gDACzC,MAAM,EAAE,yBAAyB;gDACjC,OAAO,EAAE,6CAA6C;gDACtD,OAAO,EAAE,CAAC,SAAS,CAAC;gDACpB,QAAQ,EAAE,UAAU;6CACvB,CAAC;;wCALE,UAAU,GAAG,SAKf;wCACF,UAAU,CAAC,OAAO,EAAE,CAAC;;;;6BACxB,CAAC,CAAC;;;;;KACN;IAEK,4CAAc,GAApB;;;;;;;wBACI,0DAA0D;wBAC1D,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;wBACzB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;wBACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC,iBAAiB;;;;wBAEX,qBAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE;;wBAAtD,UAAU,GAAQ,SAAoC;wBAC5D,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wBACxB,UAAU,CAAC,OAAO,CAAC,UAAC,MAAW;4BAC3B,IAAI,MAAM,GAAG,EAAE,CAAC;4BAChB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;gCACxB,MAAM,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;4BACnE,CAAC,CAAC,CAAC;4BACH,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;wBAClG,CAAC,CAAC,CAAC;wBACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;wBACrC,IAAI,IAAI,CAAC,IAAI,KAAK,iBAAiB,EAAC;4BAChC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,iBAAiB;yBACzC;6BAAM;4BACH,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,iBAAiB;4BAEtC;iEACqC;yBACxC;;;;wBAED,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;;;;;;KAEpD;IAED,uCAAS,GAAT;QACI,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,0CAAY,GAAZ;QAAA,iBAcC;QAbG,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,MAAM;YAC3B,IAAG,MAAM,CAAC,MAAM,EAAC;gBACb,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACtC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,gBAAgB,EAAC;YACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B;QACD,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IAC3B,CAAC;IAEK,8CAAgB,GAAtB;;;;;;;6BACQ,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAA5B,yBAA4B;wBACZ,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gCAC1C,OAAO,EAAE,eAAe;6BAC3B,CAAC;;wBAFI,OAAO,GAAG,SAEd;wBACF,OAAO,CAAC,OAAO,EAAE,CAAC;6BACd,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAA5B,wBAA4B;wBACxB,IAAI,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;;;;wBAE5E,qBAAM,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC;;wBAAhD,SAAgD,CAAC;wBACjD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,OAAO;4BAClC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,OAAO,CAAC,GAAG,EAAE,EAAC,IAAI,EAAE,6BAA6B,EAAC,CAAC,CAAC;wBACzG,CAAC,CAAC,CAAC;wBACH,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBACd,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCACpC,MAAM,EAAE,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,kBAAkB;gCACtE,OAAO,EAAE,gCAAgC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,0BAA0B,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,aAAa;gCACpJ,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gCAC3B,QAAQ,EAAE,UAAU;6BACvB,CAAC;;wBALE,UAAQ,SAKV;wBACF,OAAK,CAAC,OAAO,EAAE,CAAC;;;;wBAEhB,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,IAAI,CAAC,mBAAmB,EAAE,CAAC;wBAC3B,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;;;6BAG5D,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAA5B,yBAA4B;;;;wBAExB,qBAAM,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;;wBAA1H,SAA0H,CAAC;wBAC3H,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBACd,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCACpC,MAAM,EAAE,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,aAAa;gCACjE,OAAO,EAAE,gCAAgC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,aAAa;gCAC/I,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gCAC3B,QAAQ,EAAE,UAAU;6BACvB,CAAC;;wBALE,UAAQ,SAKV;wBACF,OAAK,CAAC,OAAO,EAAE,CAAC;;;;wBAEhB,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBACT,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCACzC,MAAM,EAAE,yBAAyB;gCACjC,OAAO,EAAE,6CAA6C;gCACtD,OAAO,EAAE,CAAC,SAAS,CAAC;gCACpB,QAAQ,EAAE,UAAU;6BACvB,CAAC;;wBALE,UAAU,GAAG,SAKf;wBACF,UAAU,CAAC,OAAO,EAAE,CAAC;;;;;;KAIpC;IAED,oCAAM,GAAN;QAAA,iBAgBC;QAfG,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,MAAM;YAC3B,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;gBACxB,IAAI,KAAK,CAAC,MAAM,EAAC;oBACb,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACnC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,IAAG,IAAI,CAAC,cAAc,EAAC;YACnB,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,UAAU,CAAC;YACP,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAEK,4CAAc,GAApB;;;;;;;6BACQ,IAAI,CAAC,cAAc,CAAC,MAAM,EAA1B,yBAA0B;wBACV,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gCAC1C,OAAO,EAAE,eAAe;6BAC3B,CAAC;;wBAFI,OAAO,GAAG,SAEd;wBACF,OAAO,CAAC,OAAO,EAAE,CAAC;6BACd,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAA5B,wBAA4B;wBACxB,IAAI,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;;;;wBAExE,qBAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC;;wBAA/C,SAA+C,CAAC;wBAChD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,OAAO;4BAClC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,OAAO,CAAC,GAAG,EAAE,EAAC,IAAI,EAAE,4BAA4B,EAAE,cAAc,EAAE,IAAI,EAAC,CAAC,CAAC;wBAC9H,CAAC,CAAC,CAAC;wBACH,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBACd,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCACpC,MAAM,EAAE,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,kBAAkB;gCACtE,OAAO,EAAE,gCAAgC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,0BAA0B,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,YAAY;gCACjJ,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gCAC3B,QAAQ,EAAE,UAAU;6BACvB,CAAC;;wBALE,UAAQ,SAKV;wBACF,OAAK,CAAC,OAAO,EAAE,CAAC;;;;wBAEhB,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;;;6BAG/B,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAA5B,yBAA4B;;;;wBAExB,qBAAM,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;;wBAAtH,SAAsH,CAAC;wBACvH,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBACd,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCACpC,MAAM,EAAE,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,aAAa;gCACjE,OAAO,EAAE,gCAAgC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,qBAAqB,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,YAAY;gCAC5I,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gCAC3B,QAAQ,EAAE,UAAU;6BACvB,CAAC;;wBALE,UAAQ,SAKV;wBACF,OAAK,CAAC,OAAO,EAAE,CAAC;;;;wBAEhB,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBACT,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCACzC,MAAM,EAAE,yBAAyB;gCACjC,OAAO,EAAE,6CAA6C;gCACtD,OAAO,EAAE,CAAC,SAAS,CAAC;gCACpB,QAAQ,EAAE,UAAU;6BACvB,CAAC;;wBALE,UAAU,GAAG,SAKf;wBACF,UAAU,CAAC,OAAO,EAAE,CAAC;;;;;;KAIpC;IAED,gBAAgB;IAChB,2CAAa,GAAb,UAAc,KAAK;QAAnB,iBAuCC;QAtCG,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAC;YAChB,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBAC5B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,OAAO;oBAClC,IAAI,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;wBAC5E,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACnC;gBACL,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;aAC7C;SACJ;aAAM,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;YACxB,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBAC5B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,MAAM;oBAC9B,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;wBAC3E,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBAChC;gBACL,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;aACxC;SACJ;aAAM,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;YACxB,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBAC5B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,MAAM;oBAC9B,IAAI,MAAM,GAAG,EAAE,CAAC;oBAChB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;wBACxB,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;4BAC1E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBACtB;oBACL,CAAC,CAAC,CAAC;oBACH,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAC,CAAC,CAAC;gBACtG,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;aACxC;SACJ;IACL,CAAC;IAED,0CAAY,GAAZ,UAAa,KAAK;QACd,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;IACzC,CAAC;IAEK,oCAAM,GAAZ,UAAa,OAAO;;;gBAChB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC;oBAChB,IAAI,OAAO,CAAC,MAAM,EAAC;wBACf,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;wBACvB,IAAI,CAAC,aAAa,EAAE,CAAC;qBACxB;yBAAM;wBACH,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;wBACtB,IAAI,CAAC,aAAa,EAAE,CAAC;qBACxB;oBACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;iBAC/D;;;;KACJ;IAED,wCAAU,GAAV,UAAW,IAAI;QACX,IAAI,IAAI,CAAC,MAAM,EAAC;YACZ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;aAAM;YACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;IACL,CAAC;IAEK,iDAAmB,GAAzB;;;;;;;6BACQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAArC,wBAAqC;wBACzB,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCACpC,MAAM,EAAE,sCAAsC;gCAC9C,OAAO,EAAE,kKAAkK;gCAC3K,OAAO,EAAE,CAAC;wCACN,IAAI,EAAE,KAAK;wCACX,OAAO,EAAE;4CACL,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;4CACvB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;4CAC5C,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC,iBAAiB,EAAE,IAAI,EAAC,CAAC,CAAC,IAAI,CAAC;gDACjD,KAAI,CAAC,YAAY,EAAE,CAAC;4CACxB,CAAC,CAAC,CAAC;wCACP,CAAC;qCACJ,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC;gCACpB,QAAQ,EAAE,UAAU;6BACvB,CAAC;;wBAdE,UAAQ,SAcV;wBACF,OAAK,CAAC,OAAO,EAAE,CAAC;;;;;;KAEvB;IAED,0CAAY,GAAZ;QACI,IAAM,cAAc,GAAG,sNAAsN,CAAC;QAC9O,IAAI,IAAI,CAAC,IAAI,KAAK,aAAa,EAAE;YAC7B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAC,CAAC,CAAC;SAC9F;aAAM,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;YAC9B,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAC;gBAC5B,IAAI,KAAK,GAAG;oBACR,GAAG,EAAE,IAAI,CAAC,cAAc;oBACxB,OAAO,EAAE,gCAAgC;oBACzC,IAAI,EAAE,mRAAmR,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,MAAM;oBAClU,MAAM,EAAE,IAAI;iBACf,CAAC;gBACF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAClC;iBAAM;gBACH,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,SAAS,GAAG,IAAI,CAAC,cAAc,GAAG,+CAA+C,GAAG,SAAS,CAAC,cAAc,CAAC,CAAC;aACxI;SACJ;IACL,CAAC;IAED,8CAAgB,GAAhB;QACI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC;YACpE,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACzB;aAAM;YACH,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACzB;QACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;IAChE,CAAC;IAED,wCAAU,GAAV;QACI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC/C,CAAC;IAED,4FAA4F;IAC5F,2CAAa,GAAb,UAAc,KAAa,EAAE,IAAS;QAClC,OAAO,KAAK,CAAC;IACjB,CAAC;IAEK,iDAAmB,GAAzB;;;;;4BACuB,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BAC3C,MAAM,EAAE,wBAAwB;4BAChC,OAAO,EAAE,wCAAwC;4BACjD,OAAO,EAAE,CAAC,SAAS,CAAC;4BACpB,QAAQ,EAAE,UAAU;yBACvB,CAAC;;wBALE,YAAY,GAAG,SAKjB;wBACF,qBAAM,YAAY,CAAC,OAAO,EAAE;;wBAA5B,SAA4B,CAAC;;;;;KAChC;;gBAzfwB,yDAAG;gBACO,8EAAa;gBAClB,mEAAQ;gBACP,8DAAe;gBACb,gEAAiB;gBACpB,8DAAe;gBACd,wDAAS;gBACV,uDAAQ;gBACL,2DAAI;gBACR,+DAAQ;gBACF,iEAAQ;gBACT,8DAAM;;IA9C/B;QAAR,2DAAK,EAAE;;qDAAW;IACV;QAAR,2DAAK,EAAE;;gEAAsB;IACrB;QAAR,2DAAK,EAAE;;uDAAa;IACZ;QAAR,2DAAK,EAAE;;sDAAY;IALX,mBAAmB;QAN/B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,+MAA0C;YAE1C,aAAa,EAAE,+DAAiB,CAAC,IAAI;;SACtC,CAAC;yCAsC2B,yDAAG;YACO,8EAAa;YAClB,mEAAQ;YACP,8DAAe;YACb,gEAAiB;YACpB,8DAAe;YACd,wDAAS;YACV,uDAAQ;YACL,2DAAI;YACR,+DAAQ;YACF,iEAAQ;YACT,8DAAM;OAhD/B,mBAAmB,CA+hB/B;IAAD,0BAAC;CAAA;AA/hB+B","file":"default~administrators-administrators-module~board-communityboard-communityboard-module~communities-~e958f6f2.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"closeModal()\\\"><ion-icon name=\\\"chevron-back-outline\\\"></ion-icon></ion-button>\\n    </ion-buttons>\\n    <ion-title>{{title}}</ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n    <ion-searchbar [(ngModel)]=\\\"searchKeywords\\\" debounce=\\\"500\\\" (ionChange)=\\\"executeSearch($event)\\\" (ionCancel)=\\\"cancelSearch($event)\\\"></ion-searchbar>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"page === 1\\\">\\n    <ion-virtual-scroll [items]=\\\"contact_list\\\" [trackBy]=\\\"customTrackBy\\\">\\n      <ion-item *virtualItem=\\\"let contact\\\" (click)=\\\"select(contact)\\\">\\n        <ion-icon *ngIf=\\\"!(contact.select || contact.joined)\\\" name=\\\"radio-button-off\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-icon *ngIf=\\\"contact.select\\\" name=\\\"radio-button-on\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-icon *ngIf=\\\"contact.joined\\\" name=\\\"checkmark\\\" slot=\\\"start\\\"></ion-icon>\\n        <div>\\n          {{contact.name}}\\n        <ion-note *ngIf=\\\"type === 'SMS Message' && contact.type ==='contact'\\\">{{contact.phoneNumbers[0].value}}</ion-note>\\n          <ion-note *ngIf=\\\"type === 'Email' && contact.type ==='contact'\\\">{{contact.emails[0].value}}</ion-note>\\n        </div>\\n      </ion-item>\\n      <ion-spinner *ngIf=\\\"ionSpinner\\\"></ion-spinner>\\n    </ion-virtual-scroll>\\n\\n    <ion-list *ngIf=\\\"type !== 'Restvo Users'\\\">\\n      <ion-item>\\n        <ion-label><ion-icon name=\\\"person\\\"></ion-icon></ion-label>\\n        <ion-input [(ngModel)]=\\\"name\\\" placeholder=\\\"Full name\\\" type=\\\"name\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item *ngIf=\\\"type === 'SMS Message'\\\">\\n        <ion-label><ion-icon name=\\\"phone-portrait\\\"></ion-icon></ion-label>\\n        <ion-input [(ngModel)]=\\\"mobile_phone\\\" placeholder=\\\"Mobile Number\\\" type=\\\"tel\\\" (input)=\\\"checkInputFields()\\\"></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"type === 'Email'\\\">\\n        <ion-label><ion-icon name=\\\"mail\\\"></ion-icon></ion-label>\\n        <ion-input [(ngModel)]=\\\"email\\\" placeholder=\\\"Email\\\" type=\\\"text\\\" (input)=\\\"checkInputFields()\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n\\n    <p class=\\\"ion-text-wrap ion-padding\\\" *ngIf=\\\"!userData.user.importContactList\\\" (click)=\\\"enableImportContact()\\\" class=\\\"enable-import\\\">Tired of manually typing in the contact info? Click here to access your phone's contact list.</p>\\n  </div>\\n  <div *ngIf=\\\"page === 2\\\">\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let church of mychurches\\\" (click)=\\\"selectItem(church)\\\">\\n        <ion-icon *ngIf=\\\"!church.select\\\" name=\\\"radio-button-off\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-icon *ngIf=\\\"church.select\\\" name=\\\"radio-button-on\\\" slot=\\\"start\\\"></ion-icon> {{church.name}}\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n  <div *ngIf=\\\"page === 3\\\">\\n    <ion-list>\\n      <div *ngFor=\\\"let church of mychurches\\\">\\n        <ion-list-header>{{church.name}}</ion-list-header>\\n        <ion-item *ngFor=\\\"let group of church.groups\\\" (click)=\\\"selectItem(group)\\\">\\n          <ion-icon *ngIf=\\\"!group.select\\\" name=\\\"radio-button-off\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-icon *ngIf=\\\"group.select\\\" name=\\\"radio-button-on\\\" slot=\\\"start\\\"></ion-icon> {{group.name}}\\n        </ion-item>\\n      </div>\\n\\n    </ion-list>\\n  </div>\\n\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar *ngIf=\\\"page === 1\\\">\\n      <ion-button [hidden]=\\\"!selectedGroups.length && !selectedChurches.length\\\" expand=\\\"full\\\" shape=\\\"round\\\" (click)=\\\"sendInvitations()\\\" color=\\\"primary\\\" [disabled]=\\\"!((mobile_phone.length && name.length) || (email.length && name.length) || (totalSelected) > 0)\\\">Send {{totalSelected}} Invitation(s)</ion-button>\\n      <ion-button [hidden]=\\\"selectedGroups.length || selectedChurches.length\\\" expand=\\\"full\\\" shape=\\\"round\\\" (click)=\\\"goToStep2()\\\" color=\\\"primary\\\" [disabled]=\\\"!((mobile_phone.length && name.length) || (email.length && name.length) || (totalSelected) > 0)\\\">Select {{totalSelected}} Friend(s)</ion-button>\\n  </ion-toolbar>\\n  <ion-toolbar *ngIf=\\\"page === 2\\\">\\n      <ion-button expand=\\\"full\\\" shape=\\\"round\\\" *ngIf=\\\"totalSelected === 0\\\" (click)=\\\"goToStep3($event)\\\" color=\\\"primary\\\">Skip</ion-button>\\n      <ion-button expand=\\\"full\\\" shape=\\\"round\\\" *ngIf=\\\"totalSelected > 0\\\" (click)=\\\"goToStep3($event)\\\" color=\\\"primary\\\">Select {{totalSelected}} Community</ion-button>\\n  </ion-toolbar>\\n  <ion-toolbar *ngIf=\\\"page === 3\\\">\\n      <ion-button expand=\\\"full\\\" shape=\\\"round\\\" *ngIf=\\\"totalSelected === 0\\\" (click)=\\\"finish($event)\\\" color=\\\"primary\\\">Skip</ion-button>\\n      <ion-button expand=\\\"full\\\" shape=\\\"round\\\" *ngIf=\\\"totalSelected > 0\\\" (click)=\\\"finish($event)\\\" color=\\\"primary\\\">Select {{totalSelected}} Group(s)</ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n\\n\"","export default \"app-invitetoconnect .enable-import {\\n  color: #e88a91;\\n  text-decoration: underline;\\n  background: none;\\n  border: none;\\n  font-size: 15px;\\n  word-wrap: break-word;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jYWxpeGh1YW5nL1dlYl9EZXZlbG9wbWVudC9yZXN0dm8vcmVzdHZvLWFwcC9zcmMvYXBwL3BhZ2VzL2Nvbm5lY3QvaW52aXRldG9jb25uZWN0L2ludml0ZXRvY29ubmVjdC5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2Nvbm5lY3QvaW52aXRldG9jb25uZWN0L2ludml0ZXRvY29ubmVjdC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUU7RUFDRSxjQUFBO0VBQ0EsMEJBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EscUJBQUE7QUNESiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Nvbm5lY3QvaW52aXRldG9jb25uZWN0L2ludml0ZXRvY29ubmVjdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhcHAtaW52aXRldG9jb25uZWN0IHtcblxuICAuZW5hYmxlLWltcG9ydCB7XG4gICAgY29sb3I6IHJnYigyMzIsMTM4LDE0NSk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgfVxufVxuIiwiYXBwLWludml0ZXRvY29ubmVjdCAuZW5hYmxlLWltcG9ydCB7XG4gIGNvbG9yOiAjZTg4YTkxO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBmb250LXNpemU6IDE1cHg7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn0iXX0= */\"","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { EmailComposer } from '@ionic-native/email-composer/ngx';\nimport { Contacts, ContactFieldType } from '@ionic-native/contacts/ngx';\nimport { AlertController, LoadingController, ModalController, NavParams, Platform } from '@ionic/angular';\nimport { UserData } from '../../../services/user.service';\nimport { Churches } from '../../../services/church.service';\nimport { Groups } from '../../../services/group.service';\nimport { Auth } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-invitetoconnect',\n  templateUrl: './invitetoconnect.page.html',\n  styleUrls: ['./invitetoconnect.page.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class InvitetoconnectPage implements OnInit {\n\n    @Input() type: any;\n    @Input() selectedAppUser: any;\n    @Input() church: any;\n    @Input() group: any;\n\n    page: number = 1;\n    title = '';\n    selectedChurch: any;\n    selectedChurches: any = [];\n    selectedGroup: any;\n    selectedGroups: any = [];\n    name: string = '';\n    email: string = '';\n    mobile_phone: string = '';\n    selectCounter: number = 0;\n    entryCounter: number = 0;\n    totalSelected: number = 0;\n    all_contact_list: any = [];\n    contact_list: any = [];\n    ionSpinner: boolean = true;\n    fields: ContactFieldType[];\n    searchKeywords: string = '';\n    selectedContacts: any = [];\n    selectedEmails: any = [];\n    selectedPhoneNumbers: any = [];\n    selectedAppUsers: any = [];\n\n    mychurches: any = [];\n    allmychurches: any = [];\n    mygroups: any = [];\n    privateGroup: boolean = false;\n\n    refreshNeeded = false;\n\n    constructor(\n                private sms: SMS,\n                private emailComposer: EmailComposer,\n                private contacts: Contacts,\n                private alertCtrl: AlertController,\n                private loadingCtrl: LoadingController,\n                public modalCtrl: ModalController,\n                private navParams: NavParams,\n                private platform: Platform,\n                private authService: Auth,\n                public userData: UserData,\n                private churchService: Churches,\n                private groupService: Groups,\n    ) {}\n\n    ngOnInit() {\n        this.selectedGroup = this.group || null;\n        this.selectedChurch = this.church || null;\n        this.title = this.type || null;\n        console.log(\"group\", this.selectedGroup, this.type);\n        if (this.selectedChurch && this.selectedChurch._id){ // in the event the user already selected a community\n            this.selectedChurches.push(this.selectedChurch);\n        }\n        if(this.selectedGroup && this.selectedGroup._id){ // in the event the user already selected a group\n            this.selectedGroups.push(this.selectedGroup);\n            if(!this.selectedGroup.churchId){\n                this.privateGroup = true;\n            }\n        }\n        if(this.selectedAppUser && this.selectedAppUser._id){ //in the event the user has already selected 1 user\n            this.selectedAppUser.name = this.selectedAppUser.name || this.selectedAppUser.first_name + \" \" + this.selectedAppUser.last_name;\n            this.selectedAppUsers.push({_id: this.selectedAppUser._id, name: this.selectedAppUser.name});\n        }\n        this.goToStep1();\n    }\n\n    goToStep1() {\n        this.loadFriends();\n        if (this.type === 'Invite to Community' || this.type === 'Invite to Group'){\n            this.loadMyChurches(); // this will skip to page 2\n        } else if (this.type !== 'Restvo Users'){\n            this.loadContacts();\n        }\n        setTimeout(() => {\n            this.ionSpinner = false;\n        }, 10000);\n    }\n\n    async loadFriends() {\n        let uniqueMemberId = [];\n        if (this.selectedChurches.length) {\n            if (this.selectedChurches[0].members && this.selectedChurches[0].members.length){\n                this.selectedChurches[0].members.forEach((member) => {\n                    uniqueMemberId.push(member._id);\n                });\n            }\n        } else if (this.selectedGroups.length) {\n            if (this.selectedGroups[0].members && this.selectedGroups[0].members.length){\n                this.selectedGroups[0].members.forEach((member) => {\n                    uniqueMemberId.push(member._id);\n                });\n            }\n        }\n        try {\n            const friends: any = await this.userData.loadMyFriends();\n            this.ionSpinner = false;\n            if (friends){\n                friends.forEach((friend) => {\n                    if (friend.restvoApp) {\n                        this.all_contact_list.push({type: 'appUser', _id: friend._id, name: friend.name, select: false, joined: uniqueMemberId.indexOf(friend._id) > -1});\n                    }\n                });\n                this.all_contact_list.sort(function(a,b) {return (a.name < b.name) ? -1 : (a.name > b.name) ? 1 : 0});\n                this.contact_list = this.all_contact_list;\n            }\n        } catch (err) {\n            this.ionSpinner = false;\n        }\n    }\n\n    loadContacts() {\n        if (this.platform.is('cordova') && this.userData.user.importContactList) {\n            this.contacts.find(['*'], { desiredFields: ['name','phoneNumbers','emails'], multiple: true }).then((contacts) => {\n                this.ionSpinner = false;\n                if (contacts) {\n                    contacts.forEach((contact) => {\n                        if ((this.type === 'SMS Message') && contact.phoneNumbers){\n                            this.all_contact_list.push({type: 'contact', _id: null, name: contact.name.formatted, phoneNumbers: contact.phoneNumbers, select: false, joined: false});\n                        } else if ((this.type === 'Email') && contact.emails){\n                            this.all_contact_list.push({type: 'contact', _id: null, name: contact.name.formatted, emails: contact.emails, select: false, joined: false});\n                        }\n                    });\n                    this.all_contact_list.sort(function(a,b) {return (a.name < b.name) ? -1 : (a.name > b.name) ? 1 : 0});\n                    this.contact_list = this.all_contact_list;\n                }\n            }, (err) => {\n                this.ionSpinner = false;\n            });\n        } else {\n            this.ionSpinner = false;\n            this.contact_list = [];\n        }\n    }\n\n    sendInvitations() {\n        this.prepareContacts();\n        this.inviteFriends();\n        if (this.selectedChurches.length) {\n            this.inviteToChurches();\n        } else if (this.selectedGroups.length){\n            this.inviteToGroups();\n        }\n        this.openComposer();\n    }\n\n    goToStep2() {\n        this.prepareContacts(); // sync logic to prepare all the contacts for uploading\n        this.inviteFriends(); // add the pending request entries for non-Restvo Users in Pending collection\n        this.loadMyChurches();\n    }\n\n    prepareContacts() {\n        this.selectedContacts = [];\n        this.selectedAppUsers = [];\n        if (this.type === \"SMS Message\" || this.type === 'Restvo Users'){\n            this.selectedPhoneNumbers = [];\n            this.all_contact_list.forEach((contact) => {\n                if (contact.select){\n                    if (contact.type === 'contact'){\n                        let foundMobile = false;\n                        let contactPhones = [];\n                        contact.phoneNumbers.forEach((number) => {\n                            if (number.type.toLowerCase().indexOf('mobile') > -1 || number.type.toLowerCase().indexOf('cell') > -1) {\n                                this.selectedPhoneNumbers.push(number.value);\n                                foundMobile = true;\n                            }\n                            contactPhones.push(number.value);\n                        });\n                        if (!foundMobile){ //if no mobile or cell label is found, use the first number\n                            this.selectedPhoneNumbers.push(contact.phoneNumbers[0].value);\n                        }\n                        this.selectedContacts.push({name: contact.name, phones: contactPhones});\n                    } else if (contact.type === 'appUser'){\n                        this.selectedAppUsers.push({_id: contact._id, name: contact.name});\n                    }\n                }\n            });\n            if (this.mobile_phone.length && this.name.length){ //check the manual input fields\n                this.selectedPhoneNumbers.push(this.mobile_phone);\n                this.selectedContacts.push({name: this.name, phones: [this.mobile_phone]})\n            }\n        } else if (this.type === \"Email\"){\n            this.selectedEmails = [];\n            this.all_contact_list.forEach((contact) => {\n                if (contact.select){\n                    if (contact.type === 'contact'){\n                        let contactEmails = [];\n                        contact.emails.forEach((email)=> {\n                            this.selectedEmails.push(email.value);\n                            contactEmails.push(email.value.toLowerCase());\n                        });\n                        this.selectedContacts.push({name: contact.name, emails: contactEmails})\n                    } else if (contact.type === 'appUser'){\n                        this.selectedAppUsers.push({_id: contact._id, name: contact.name});\n                    }\n                }\n            });\n            if (this.email.length && this.name.length){ //check the manual input fields\n                this.selectedEmails.push(this.email);\n                this.selectedContacts.push({name: this.name, emails: [this.email]})\n            }\n        }\n    }\n\n    async inviteFriends() {\n        const loading = await this.loadingCtrl.create({\n            message: 'Processing...'\n        });\n        loading.present();\n        this.userData.inviteFriends({selectedContacts: this.selectedContacts}).subscribe((result) => {\n            loading.dismiss();\n        }, async (err) => {\n            loading.dismiss();\n            let errorAlert = await this.alertCtrl.create({\n                header: 'Something went wrong...',\n                message: 'The server is busy. Please try again later.',\n                buttons: ['Dismiss'],\n                cssClass: 'level-15'\n            });\n            errorAlert.present();\n        });\n    }\n\n    async loadMyChurches() {\n        // push a modal page to collect optional church invitation\n        this.searchKeywords = '';\n        this.totalSelected = 0;\n        this.mychurches = []; //reset the array\n        try {\n            const mychurches: any = await this.userData.loadMyChurches();\n            this.ionSpinner = false;\n            mychurches.forEach((church: any) => {\n                let groups = [];\n                church.groups.forEach((group) => {\n                    groups.push({_id: group._id, name: group.name, select: false});\n                });\n                this.allmychurches.push({_id: church._id, name: church.name, groups: groups, select: false });\n            });\n            this.mychurches = this.allmychurches;\n            if (this.type === 'Invite to Group'){\n                this.loadMyGroups(); // skip to step 3\n            } else {\n                this.loadMyGroups(); // skip to step 3\n\n                /*this.page = 2;\n                this.title = \"Invite to Community\";*/\n            }\n        } catch (err) {\n            console.log(\"failed to get mychurches data\");\n        }\n    }\n\n    goToStep3() {\n        this.loadMyGroups();\n    }\n\n    loadMyGroups() {\n        this.searchKeywords = '';\n        this.selectedChurches = [];\n        this.mychurches.forEach((church) => {\n            if(church.select){\n                this.selectedChurches.push(church);\n            }\n        });\n        if (this.selectedChurches){\n            this.inviteToChurches();\n        }\n        this.page = 3;\n        this.title = \"Invite to Group\";\n        this.totalSelected = 0;\n    }\n\n    async inviteToChurches() {\n        if (this.selectedChurches.length){\n            const loading = await this.loadingCtrl.create({\n                message: 'Processing...'\n            });\n            loading.present();\n            if (this.selectedAppUsers.length){\n                let data = { churches: this.selectedChurches, appUsers: this.selectedAppUsers };\n                try{\n                    await this.churchService.inviteNewAppUsers(data);\n                    this.selectedAppUsers.forEach((appuser) => {\n                        this.userData.socket.emit('refresh user status', appuser._id, {type: 'update church participation'});\n                    });\n                    loading.dismiss();\n                    this.refreshNeeded = true;\n                    let alert = await this.alertCtrl.create({\n                        header: 'Invited ' + this.selectedAppUsers.length + ' Restvo user(s).',\n                        message: 'You have successfully invited ' + this.selectedAppUsers.length + ' Restvo user(s) to join ' + this.selectedChurches.length + ' community.',\n                        buttons: [{ text: 'Done' }],\n                        cssClass: 'level-15'\n                    });\n                    alert.present();\n                } catch (err){\n                    loading.dismiss();\n                    this.noNetworkConnection();\n                    console.log(\"send invitation to join community failed\");\n                }\n            }\n            if (this.selectedContacts.length){\n                try {\n                    await this.churchService.invitePendingMembers({churches: this.selectedChurches, selectedContacts: this.selectedContacts });\n                    loading.dismiss();\n                    this.refreshNeeded = true;\n                    let alert = await this.alertCtrl.create({\n                        header: 'Invited ' + this.selectedContacts.length + ' person(s).',\n                        message: 'You have successfully invited ' + this.selectedContacts.length + ' person(s) to join ' + this.selectedChurches.length + ' community.',\n                        buttons: [{ text: 'Done' }],\n                        cssClass: 'level-15'\n                    });\n                    alert.present();\n                } catch (err){\n                    loading.dismiss();\n                    this.refreshNeeded = true;\n                    let errorAlert = await this.alertCtrl.create({\n                        header: 'Something went wrong...',\n                        message: 'The server is busy. Please try again later.',\n                        buttons: ['Dismiss'],\n                        cssClass: 'level-15'\n                    });\n                    errorAlert.present();\n                }\n            }\n        }\n    }\n\n    finish() {\n        this.selectedGroups = [];\n        this.mychurches.forEach((church) => {\n            church.groups.forEach((group) => {\n                if (group.select){\n                    this.selectedGroups.push(group);\n                }\n            });\n        });\n        if(this.selectedGroups){\n            this.inviteToGroups();\n        }\n        this.openComposer();\n        setTimeout(() => {\n            this.modalCtrl.dismiss();\n        }, 3000);\n    }\n\n    async inviteToGroups() {\n        if (this.selectedGroups.length){\n            const loading = await this.loadingCtrl.create({\n                message: 'Processing...'\n            });\n            loading.present();\n            if (this.selectedAppUsers.length){\n                let data = { groups: this.selectedGroups, appUsers: this.selectedAppUsers };\n                try {\n                    await this.groupService.inviteNewAppUsers(data);\n                    this.selectedAppUsers.forEach((appuser) => {\n                        this.userData.socket.emit('refresh user status', appuser._id, {type: 'update group participation', conversationId: null});\n                    });\n                    loading.dismiss();\n                    this.refreshNeeded = true;\n                    let alert = await this.alertCtrl.create({\n                        header: 'Invited ' + this.selectedAppUsers.length + ' Restvo user(s).',\n                        message: 'You have successfully invited ' + this.selectedAppUsers.length + ' Restvo user(s) to join ' + this.selectedGroups.length + ' group(s).',\n                        buttons: [{ text: 'Done' }],\n                        cssClass: 'level-15'\n                    });\n                    alert.present();\n                } catch (err) {\n                    loading.dismiss();\n                    this.refreshNeeded = true;\n                    this.noNetworkConnection();\n                }\n            }\n            if (this.selectedContacts.length){\n                try {\n                    await this.groupService.invitePendingMembers({ groups: this.selectedGroups, selectedContacts: this.selectedContacts });\n                    loading.dismiss();\n                    this.refreshNeeded = true;\n                    let alert = await this.alertCtrl.create({\n                        header: 'Invited ' + this.selectedContacts.length + ' person(s).',\n                        message: 'You have successfully invited ' + this.selectedContacts.length + ' person(s) to join ' + this.selectedGroups.length + ' group(s).',\n                        buttons: [{ text: 'Done' }],\n                        cssClass: 'level-15'\n                    });\n                    alert.present();\n                } catch (err){\n                    loading.dismiss();\n                    this.refreshNeeded = true;\n                    let errorAlert = await this.alertCtrl.create({\n                        header: 'Something went wrong...',\n                        message: 'The server is busy. Please try again later.',\n                        buttons: ['Dismiss'],\n                        cssClass: 'level-15'\n                    });\n                    errorAlert.present();\n                }\n            }\n        }\n    }\n\n    //misc functions\n    executeSearch(event){\n        if (this.page === 1){\n            if (this.searchKeywords.length) {\n                this.contact_list = [];\n                this.all_contact_list.forEach((contact) => {\n                    if (contact.name.toLowerCase().indexOf(this.searchKeywords.toLowerCase()) > -1) {\n                        this.contact_list.push(contact);\n                    }\n                });\n            } else {\n                this.contact_list = this.all_contact_list;\n            }\n        } else if (this.page === 2) {\n            if (this.searchKeywords.length) {\n                this.mychurches = [];\n                this.allmychurches.forEach((church) => {\n                    if (church.name.toLowerCase().indexOf(this.searchKeywords.toLowerCase()) > -1) {\n                        this.mychurches.push(church);\n                    }\n                });\n            } else {\n                this.mychurches = this.allmychurches;\n            }\n        } else if (this.page === 3) {\n            if (this.searchKeywords.length) {\n                this.mychurches = [];\n                this.allmychurches.forEach((church) => {\n                    let groups = [];\n                    church.groups.forEach((group) => {\n                        if (group.name.toLowerCase().indexOf(this.searchKeywords.toLowerCase()) > -1) {\n                            groups.push(group);\n                        }\n                    });\n                    this.mychurches.push({_id: church._id, name: church.name, groups: groups, select: church.select});\n                });\n            } else {\n                this.mychurches = this.allmychurches;\n            }\n        }\n    }\n\n    cancelSearch(event){\n        this.contact_list = this.all_contact_list;\n        this.mychurches = this.allmychurches;\n    }\n\n    async select(contact){\n        if (!contact.joined){\n            if (contact.select){\n                contact.select = false;\n                this.selectCounter--;\n            } else {\n                contact.select = true;\n                this.selectCounter++;\n            }\n            this.totalSelected = this.entryCounter + this.selectCounter;\n        }\n    }\n\n    selectItem(item){\n        if (item.select){\n            item.select = false;\n            this.totalSelected--;\n        } else {\n            item.select = true;\n            this.totalSelected++;\n        }\n    }\n\n    async enableImportContact() {\n        if (!this.userData.user.importContactList) {\n            let alert = await this.alertCtrl.create({\n                header: \"Allow Restvo to access your Contacts\",\n                message: \"Restvo needs access to your contacts so you can more easily select friends whom you want to invite. Would you give permission to Restvo to access your Contacts?\",\n                buttons: [{\n                    text: 'Yes',\n                    handler: () => {\n                        this.ionSpinner = true;\n                        this.userData.user.importContactList = true;\n                        this.userData.update({importContactList: true}).then(() => {\n                            this.loadContacts();\n                        });\n                    }\n                }, {text: 'Cancel'}],\n                cssClass: 'level-15'\n            });\n            alert.present();\n        }\n    }\n\n    openComposer() {\n        const welcomeMessage = \"Check out this new app called Restvo. It's the only app that intentionally builds deeper relationships and you can create chats, groups, events, polls and more. You can download it for free at: https://restvo.com\";\n        if (this.type === \"SMS Message\") {\n            this.sms.send(this.selectedPhoneNumbers, welcomeMessage, { android: { intent: 'INTENT' }});\n        } else if (this.type === \"Email\") {\n            if (this.platform.is('cordova')){\n                let email = {\n                    bcc: this.selectedEmails,\n                    subject: 'Download Restvo for free today',\n                    body: \"<p>Hey,</p><p>Check out this new app called Restvo. It's the only app that intentionally builds deeper relationships and you can create chats, groups, events, polls and more.</p><p>You can download it for free at:</p><a href=\\\"https://www.restvo.com\\\">restvo.com</a></p><p>\" + this.userData.user.first_name + \"</p>\",\n                    isHtml: true\n                };\n                this.emailComposer.open(email);\n            } else {\n                window.location.href = 'mailto:' + this.selectedEmails + '?subject=Download Restvo for free today&body=' + encodeURI(welcomeMessage);\n            }\n        }\n    }\n\n    checkInputFields(){\n        if ((this.mobile_phone.length || this.email.length) && this.name.length){\n            this.entryCounter = 1;\n        } else {\n            this.entryCounter = 0;\n        }\n        this.totalSelected = this.entryCounter + this.selectCounter;\n    }\n\n    closeModal(){\n        this.modalCtrl.dismiss(this.refreshNeeded);\n    }\n\n    // this function is used by Angular *ngFor to track the dynamic DOM creation and destruction\n    customTrackBy(index: number, item: any): any {\n        return index;\n    }\n\n    async noNetworkConnection(){\n        let networkAlert = await this.alertCtrl.create({\n            header: 'No Internet Connection',\n            message: 'Please check your internet connection.',\n            buttons: ['Dismiss'],\n            cssClass: 'level-15'\n        });\n        await networkAlert.present();\n    }\n}\n"],"sourceRoot":"webpack:///"}