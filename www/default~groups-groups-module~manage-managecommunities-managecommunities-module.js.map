{"version":3,"sources":["./src/app/pages/manage/groups/groups.page.html","./src/app/pages/manage/groups/groups.module.ts","./src/app/pages/manage/groups/groups.page.scss","./src/app/pages/manage/groups/groups.page.ts"],"names":[],"mappings":"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","file":"default~groups-groups-module~manage-managecommunities-managecommunities-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar *ngIf=\\\"modalPage\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"closeModal()\\\"><ion-icon name=\\\"chevron-back-outline\\\"></ion-icon></ion-button>\\n    </ion-buttons>\\n    <ion-title>{{userData.user.churches[userData.currentCommunityIndex].name}}: Groups</ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n    <ion-searchbar [(ngModel)]=\\\"searchKeyword\\\" debounce=\\\"500\\\" (ionChange)=\\\"executeSearch($event)\\\"></ion-searchbar>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let group of groups\\\" (click)=\\\"showGroupProfile(group)\\\">\\n      <ion-avatar slot=\\\"start\\\">\\n        <img *ngIf=\\\"group.background\\\" [src]=\\\"group.background\\\"/>\\n        <img *ngIf=\\\"!group.background\\\" src=\\\"assets/img/group-default.png\\\"/>\\n      </ion-avatar>\\n      <ion-label>\\n        <h2 class=\\\"ion-text-wrap\\\">{{group.name}}</h2>\\n        <p *ngIf=\\\"group.conversation\\\">Type: Group</p>\\n        <p *ngIf=\\\"group.board\\\">Type: Topic</p>\\n        <p class=\\\"personnel ion-text-wrap\\\">Leader<span *ngIf=\\\"group.leaders?.length > 1\\\">s</span>: <span *ngFor=\\\"let leader of group.leaders; index as i\\\"><span *ngIf=\\\"i > 0\\\">, </span>{{leader.name}}</span></p>\\n      </ion-label>\\n      <ion-badge *ngIf=\\\"!group.flagged\\\" slot=\\\"end\\\" class=\\\"ion-margin-start\\\">{{group.members.length}}{{\\\" member\\\"}}<span *ngIf=\\\"group.members?.length >= 2\\\">s</span></ion-badge>\\n      <ion-badge *ngIf=\\\"group.flagged\\\" color=\\\"danger\\\" slot=\\\"end\\\" class=\\\"ion-margin-start\\\">Review Required</ion-badge>\\n    </ion-item>\\n    <ion-item-divider class=\\\"ion-text-wrap\\\">\\n      Displaying {{groups.length}} group<span *ngIf=\\\"groups.length > 1\\\">s</span>\\n    </ion-item-divider>\\n  </ion-list>\\n  <ion-infinite-scroll position=\\\"bottom\\\" (ionInfinite)=\\\"infiniteScroll.complete()\\\">\\n    <ion-infinite-scroll-content></ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n  <ion-grid style=\\\"height: 100%\\\" *ngIf=\\\"ionSpinner\\\">\\n    <ion-row class=\\\"ion-justify-content-start ion-align-items-center\\\" style=\\\"height: 100%\\\">\\n      <ion-spinner name=\\\"dots\\\"></ion-spinner>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GroupsPage } from './groups.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GroupsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [GroupsPage]\n})\nexport class GroupsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21hbmFnZS9ncm91cHMvZ3JvdXBzLnBhZ2Uuc2NzcyJ9 */\"","import {Component, Input, OnDestroy, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {GroupchatPage} from \"../../group/groupchat/groupchat.page\";\nimport {EditgroupPage} from \"../../group/editgroup/editgroup.page\";\nimport {GroupboardPage} from \"../../board/groupboard/groupboard.page\";\nimport {\n    AlertController, IonInfiniteScroll,\n    ModalController,\n    Platform,\n} from \"@ionic/angular\";\nimport {UserData} from \"../../../services/user.service\";\nimport {Resource} from \"../../../services/resource.service\";\nimport {Storage} from \"@ionic/storage\";\nimport {Auth} from \"../../../services/auth.service\";\nimport {Chat} from \"../../../services/chat.service\";\nimport {Churches} from \"../../../services/church.service\";\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.page.html',\n  styleUrls: ['./groups.page.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class GroupsPage implements OnInit, OnDestroy {\n    @ViewChild(IonInfiniteScroll, {static: false}) infiniteScroll: IonInfiniteScroll;\n\n    @Input() modalPage: any;\n    subscriptions: any = {};\n    //variables to search topics\n    ionSpinner = false;\n    groups: any = [];\n    searchKeyword = '';\n    refreshNeeded = false;\n\n    constructor(\n        private storage: Storage,\n        private platform: Platform,\n        private authService: Auth,\n        private chatService: Chat,\n        public userData: UserData,\n        private churchService: Churches,\n        private resourceService: Resource,\n        private modalCtrl: ModalController,\n        private alertCtrl: AlertController,) { }\n\n    ngOnInit() {\n        if (this.userData && this.userData.currentCommunityAdminStatus) {\n            this.setupManageGroups();\n        }\n\n        // link refresh user observable to refresh handler\n        this.subscriptions['refreshUserStatus'] = this.userData.refreshUserStatus$.subscribe(this.refreshHandler);\n    }\n\n    refreshHandler = (data) => {\n        if (data.type === 'load community ready' || data.type === 'update admin' || data.type === 'change aux data'){\n            this.setupManageGroups();\n        }\n    };\n    //-----------------------------------\n    // methods to search for groups\n    //-----------------------------------\n\n    //maybe put executeSearch but would have to differentiate for each category\n    async setupManageGroups() {\n        try {\n            const groups: any = await this.churchService.loadAllChurchGroupProfiles(this.userData.user.churches[this.userData.currentCommunityIndex]._id);\n            this.groups = [];\n            this.ionSpinner = false;\n            groups.forEach((group) => {\n                if (group.hasOwnProperty('conversation') && (group.name.toLowerCase().indexOf(this.searchKeyword.toLowerCase()) >= 0)) {\n                    this.groups.push(group);\n                }\n            });\n            this.groups.sort(function(a,b) {\n                const c: any = new Date(a.updatedAt);\n                const d: any = new Date(b.updatedAt);\n                return (d - c); });\n            this.groups.sort(function (a, b) {\n                return b.flagged - a.flagged\n            });\n        } catch (err) {\n            this.ionSpinner = false;\n            const networkAlert = await this.alertCtrl.create({\n                header: 'No Internet Connection',\n                subHeader: 'Please check your internet connection.',\n                buttons: ['Dismiss'],\n                cssClass: 'level-15'\n            });\n            await networkAlert.present();\n            console.log(\"not allowed\");\n        }\n    }\n\n    async showGroupProfile(group){\n        if (group.conversation) {\n            this.chatService.currentChatProps.push({\n                conversationId: group.conversation,\n                name: group.name,\n                group: group,\n                badge: true,\n                page: 'about',\n                modalPage: true\n            });\n            const groupPage = await this.modalCtrl.create({\n                component: GroupchatPage,\n                componentProps: this.chatService.currentChatProps[this.chatService.currentChatProps.length - 1]\n            });\n            await groupPage.present();\n            const {data: refreshNeeded} = await groupPage.onDidDismiss();\n            if (refreshNeeded) {\n                this.setupManageGroups();\n            }\n        } else {\n            const groupBoardPage = await this.modalCtrl.create({component: GroupboardPage, componentProps: {\n                    group: group,\n                    page: 'board'\n                }});\n            await groupBoardPage.present();\n            const {data: refreshNeeded} = await groupBoardPage.onDidDismiss();\n            if (refreshNeeded) {\n                this.setupManageGroups();\n            }\n        }\n    }\n\n    async createNewTopic() {\n        const editGroupPage = await this.modalCtrl.create({component: EditgroupPage, componentProps: {personalGroup: false, publishGroup: false}});\n        await editGroupPage.present();\n        const {data: refreshNeeded} = await editGroupPage.onDidDismiss();\n        if(refreshNeeded){\n            this.setupManageGroups();\n        }\n    }\n\n    executeSearch(event){\n        event.stopPropagation();\n        this.ionSpinner = true;\n        this.setupManageGroups();\n    }\n\n    closeModal(){\n        this.modalCtrl.dismiss(this.refreshNeeded);\n    }\n\n    ngOnDestroy() {\n        this.subscriptions['refreshUserStatus'].unsubscribe(this.refreshHandler);\n    }\n}\n"],"sourceRoot":"webpack:///"}